{
    "contents" : "### PLOT OVERVIEW OF GLOBETROTTER\n\n#library(extrafont)\n#loadfonts()\n## to get some nice fonts\n#plot_font <-  \"Ubuntu\"\nxAxCex <- 0.75\nlab_text_cex <- 0.75\n\n#######\npdf(\"figures/OverviewOfPAINTINGandGLOBETROTTER.pdf\",height=5,width=10)\n####### PLOT PAINTED CHROMOSOMES\npar(mar=c(0,0.5,2,0.5))\nplot(0,0,type=\"n\",axes=F,xlab=\"\",ylab=\"\",\n     xlim=c(0,10),ylim=c(0.5,4))\n\npcolshex <- c(\"#0000CD\",\"#03B4CC\",\"#FF7F00\",\"#984EA3\",\"#FF69B4\",\"#A65628\",\"#4DAF4A\",\"#CCCC00\")\nancreg_list <- c(\"Western_Africa_Niger-Congo\",\"Central_West_Africa_Niger-Congo\",\n                 \"East_Africa_Niger-Congo\",\"East_Africa_Nilo-Saharan\",\"East_Africa_Afro-Asiatic\",\n                 \"South_Africa_Niger-Congo\",\"South_Africa_KhoeSan\",\"Eurasia\" )\nancreg_list2 <- c(\"WNC\",\"CNC\",\"ENC\",\"ENS\",\"EAA\",\"SNC\",\"SKS\",\"EUR\")\npcoltable <- cbind(ancreg_list,ancreg_list2,pcolshex)\n\n## CHROMOSOME START\nleft1 <- 0.6\nchromlength <- 4.125\nchromheight <- 0.15\nbottom1 <- 3.5\nlinelwd <- 1.5\n\n\nplotChromo <- function(y,col1,pname)\n{\n    rect(left1,bottom1,\n         left1+chromlength,bottom1+chromheight,\n         col=col1,border=col1)\n    text(left1,bottom1+(0.5*chromheight),labels=pname,pos=2)\n}\n\nsnpposs <- seq(from=left1+0.025,to=left1+chromlength-0.025,length=20)\nchunkposs<- c()\nfor(i in 1:nrow(pcoltable))\n{\n    plotChromo(bottom1,pcoltable[i,3],pcoltable[i,2])\n    chunkposs <- c(chunkposs,bottom1+(0.5*chromheight))\n    for(j in snpposs)\n    {\n        text(x=j,y=chunkposs[length(chunkposs)],label=\"0\")\n    }\n    bottom1 <- bottom1 - 0.25\n}\n\nbottom1 <- bottom1 - 0.25\nplotChromo(bottom1,pcoltable[1,3],\"YRI\")\n## ADD SOME ADMIXTURE CHUNKS\nchunks <- snpposs[c(3,4,7,9,10,13,15,16,18,19,20)]\n\nchunks2 <- c(1,3,1,3,6,1,3,4,7,1,8)\nchunkcols <- pcoltable[chunks2,3]\nchunkpops <- pcoltable[chunks2,1]\n\nx1 <- left1\ndistbetweensnps <- 0.5*unique(diff(snpposs))[1]\nfor(i in 1:(length(chunks)-1))\n{\n    chunkpos <- chunks[i]\n    chunkcol <- chunkcols[i]\n    chunkpop <- chunkpops[i]\n    yline <- chunkposs[ancreg_list==chunkpop]\n     ## ADD LINES TO TOP PAINTINGS\n    if(i < length(chunks))\n    {\n        yline1 <- yline\n        yline2 <- chunkposs[ancreg_list==chunkpops[(i+1)]]\n        segments(chunkpos-distbetweensnps,yline1,\n                 chunkpos-distbetweensnps,yline2,lwd=linelwd)    \n    }\n    ## ADD PAINTED CHUNKS\n    x2 <- chunkpos-distbetweensnps\n    segments(x1,yline,x2,yline,lwd=linelwd)    \n    rect(x1,bottom1,x2,bottom1+chromheight,col=chunkcol,border=chunkcol)\n    x1 <- x2\n    if(i == length(chunks)-1)\n    {\n        chunkcol <- chunkcols[length(chunks)]\n        chunkpop <- chunkpops[length(chunks)]\n        chunkpos <- chunks[length(chunks)-1]\n        yline1 <- yline\n        yline2 <- chunkposs[ancreg_list==chunkpop]\n        segments(chunkpos-distbetweensnps,yline2,\n                 left1+(1*chromlength),yline2,lwd=linelwd)\n        x2 <- left1+chromlength\n        rect(x1,bottom1,x2,bottom1+chromheight,col=chunkcol,border=chunkcol)\n    }\n}\n## put in the final line\nabline(h=bottom1+0.5-(0.5*chromheight),lty=3)\n## some additional text\ntext(0,median(chunkposs),labels=\"PAINTING DONORS\",srt=90)\n## add some SNPs to recipient\nfor(j in snpposs)   text(x=j,y=bottom1+(0.5*chromheight),label=\"0\")\n\n###### 2nd panel == copying vectors\n## add connector\n\ncvmat <- matrix(0.125,nc=length(ancreg_list),nr=length(ancreg_list))\ncolnames(cvmat) <- rownames(cvmat) <- ancreg_list2\ncvmat[,2] <- 0\n\ncvbeg <- 5\nfor(i in 1:length(chunkposs))\n{\n    x1 <- x2 <- cvbeg\n    for(j in 1:nrow(cvmat))\n    {\n        x2 <- x2+cvmat[i,j]\n        rect(x1,chunkposs[i]-chromheight*0.5,\n             x2,chunkposs[i]+chromheight*0.5,\n             col=pcoltable[j,3],border=pcoltable[j,3])\n        x1 <- x2\n    }\n}\ntext(x=mean(c(cvbeg,x2)),y=chunkposs[1]+1.5*chromheight,label=\"COPYING\\nVECTORS\")\n#abline(v=x2+0.25)\n\n\n####### 3rd panel == beta coefficients\ncvbeg <- x2+0.5\nfor(i in 2)\n{\n    x1 <- x2 <- cvbeg\n    for(j in 1:nrow(cvmat))\n    {\n        x2 <- x2+cvmat[i,j]\n        rect(x1,chunkposs[i]-chromheight*0.5,\n             x2,chunkposs[i]+chromheight*0.5,\n             col=pcoltable[j,3],border=pcoltable[j,3])\n        x1 <- x2\n    }\n}\ntext(x=mean(c(cvbeg,x2)),y=chunkposs[1]+1.5*chromheight,label=\"MIXTURE\\nMODEL\")\n\n## now make yoruba a mixture of different groups\n\n## plot YORUBA\nx <- 2\nx1 <- cvbeg-1\nx2 <- x1+0.2\ny1 <- bottom1+3*chromheight\nfor(j in 1:ncol(cvmat))\n{\n    y2 <- y1-cvmat[i,j]\n    rect(x1,y1,x2,y2,\n         col=pcoltable[j,3],border=pcoltable[j,3])\n    y1 <- y2\n}\n\n##\ntext(x=x2+0.25,y=bottom1,label=\"=\",cex=2)\nx1 <- cvbeg\npopcv <- c(\"WNC\",\"ENC\",\"SKS\")\npopmix <- c(0.6,0.3,0.1)\ncnt<-1\nfor(x in c(1,3,5))\n{\n    x2 <- x1+0.2\n    y1 <- bottom1+3*chromheight\n    for(j in 1:ncol(cvmat))\n    {\n        y2 <- y1-cvmat[i,j]\n        rect(x1,y1,x2,y2,\n             col=pcoltable[j,3],border=pcoltable[j,3])\n        y1 <- y2\n    }\n    ppop <- popcv[cnt]\n    pmix <- popmix[cnt]\n    text(x=x2-0.25,y=bottom1,label=paste(pmix,\"x\",sep=\"\"),cex=1,adj=1)\n    text(mean(c(x1,x2)),y=y2,label=ppop,adj=c(0.5,1))\n    x1 <- x2+0.75\n    cnt <- cnt+1\n}\n\n\n\ndev.off()\n\n\n\n#########################################################\n## 01 PLOT A PAINTED YORUBA CHROMOSOME\nlibrary(\"rhdf5\")\n## FUNCTIONS\nhap2sampleindex <- function(hap,nsamps=10){\n    ## finds the first sample index for a haplotype\n    sample <- (hap*nsamps)-(nsamps-1)\n    return(sample)\n}\n\ndatafile <- '/mnt/kwiat/well/human/george/copy_selection/hdf5files/MalariaGenSelectionPaintings.hdf5'\n## CHROMOSOME 2\nchrom <- \"22\"\n## GET MAP AND POSITION INFO\nmap <- data.frame(t(h5read(datafile,paste0(\"/paintings/chrom\",chrom,\"/map\"))))\nH5close()\ncolnames(map) <- c(\"position\",\"recrate\")\n## GET 10X SAMPLES OF A SINGLE PAINTED CHROMOSOME\npsamples <- t(h5read(datafile,paste0(\"/paintings/samples/individuals\")))\nH5close()\ncolnames(psamples) <- c(\"ind\",\"region\",\"X\")\npsamplesind <- (1:nrow(psamples))[psamples[,\"ind\"] == \"YRI1\"]\n## 2 haps per sample!!\npsampleshap <- hap2sampleindex(psamplesind,2)\npsamplesindsamp <- hap2sampleindex(psampleshap)\n\nfor(analysis in c(\"nonlocal\"))\n{\n    tmp <- psamplesindsamp :(psamplesindsamp+9)\n    paintedchrom <- h5read(datafile,paste0(\"/paintings/chrom\",chrom,\"/\",analysis),\n                           index=list(tmp,1:nrow(map)))\n    H5close()\n    ## SWITCH DONORS TO REGIONS\n    happops <- c()\n    for(i in 1:nrow(psamples)) happops <- c(happops,rep(as.character(psamples[i,\"region\"]),2))\n    #happops <- gsub(\"SEMI.BANTU\",\"SEMI-BANTU\",happops)\n    hapregs <- c()\n    for(i in happops) hapregs <- c(hapregs,as.character(popkey$RegionM[popkey$Ethnic_Group==i]))\n    hapregs <- factor(hapregs,levels=ancreg_list)\n    paintedchromreg <- matrix(nc=ncol(paintedchrom),nr=nrow(paintedchrom))\n    for(i in 1:nrow(paintedchrom)) paintedchromreg[i,] <- hapregs[paintedchrom[i,]]\n    ## NOW GET PROPOTION OF ANCESTRY AT EACH SNP\n     paintedchromregprop <- matrix(0,nr=length(ancreg_list),nc=ncol(paintedchromreg))\n     for(i in 1:ncol(paintedchromreg))\n     {\n         print(i)\n         tmp <- table(paintedchromreg[,i])\n         paintedchromregprop[as.numeric(names(tmp)),i] <- tmp\n     }\n    \n    ## BAR WIDTHS\n    chromlength <- as.numeric(as.character(map$recrate))\n    chrompos <- as.numeric(as.character(map$position))\n    chromposI <- c(diff(chrompos),0)\n    chrom2plot <- paintedchromregprop\n    \n    if(analysis == \"local\") par(mar=c(0.5,1,1.5,1))\n    if(analysis == \"nonlocal\") par(mar=c(0.5,1,1.5,1))\n    barplot(chrom2plot,col=pcolshex,xaxs=\"i\",yaxs=\"i\",\n            space=0,axes=F,xaxt=\"n\",border=NA,\n            width=chromposI,\n            xlab=\"\",horiz=F)\n    \n    \n    image(t(t(paintedchromreg[3,])),col=pcolshex,axes=F)\n\n    image(t(paintedchromreg),col=pcolshex)\n    \n}\n#########################################################\n\nyricv <- table(paintedchromreg)\nyricv <- yricv/sum(yricv)\n\nbarplot(paintedchromreg,pols)\n",
    "created" : 1455812269732.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2650591379",
    "id" : "63D5AB0C",
    "lastKnownWriteTime" : 1455895022,
    "path" : "~/repos/popgen/plotting_scripts/plotGLOBETROTTEROverview.R",
    "project_path" : "plotting_scripts/plotGLOBETROTTEROverview.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}