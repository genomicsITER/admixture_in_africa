{
    "contents" : "### SCRIPT TO PLOT GLOBETROTTER RESULTS FOR PAPER ###\nsetwd(\"~/repos/popgen/\")\n\n############################################################\n## SOURCE SOME USEFUL FUNCTIONS FROM copyselection PACKAGE ##\n## ~~~~~~~~~~~       !!! IN DEVELOPMENT !!!     ~~~~~~~~~~ ##\n############################################################\nmain_dir <- \"~/repos/\" ## where the code is kept\nsource(paste0(main_dir,\"popgen/packages_dev/functionWriter.R\"))\nlibrary(xtable)\nlibrary(grid)\nlibrary(gridExtra)\nlibrary(ggplot2)\n\nsetwd(paste0(main_dir,\"popgen/\"))\n###########################################################\n## DEFINE DATAFILES\npopkey_file <- \"data/MalariaGenAdmixturePopulationOverviewNSAA.txt\"\nleginfo_file <- \"data/MalariaGenAdmixturePopulationKey.txt\"\n## LOAD POPKEY FILE ##\npopkey <- read.table(popkey_file,header=T,as.is=T)\npopkey$Ethnic_Group <- toupper(popkey$Ethnic_Group)\npopkey$Ethnic_Group[popkey$Ethnic_Group==\"SEMI-BANTU\"] <- \"SEMI.BANTU\"\n## LOAD LEGEND INFO\nleginfo <- read.table(leginfo_file, header = T, comment.char = \"\")\n\n### DEFINE SOME PLOTTING VARIABLES ##\ndateLabelCex=1\ndatelines=c(-1000,-500,0,500,1000,1500)\nyAxisLim=c(-1000,2000)\n## OLD VERSION OF THE COLOURS\n#pcolshex <- c(\"#0000CD\", \"#03B4CC\", \"#A65628\", \"#FF7F00\", \"#984EA3\", \"#4DAF4A\", \"#CCCC00\")[c(1,2,4,5,3,6,7)]\n## NEW COLOURS THAT DIFFERENTIATE AA AND NS\npcolshex <- c(\"#0000CD\",\"#03B4CC\",\"#FF7F00\",\"#984EA3\",\"#FF69B4\",\"#A65628\",\"#4DAF4A\",\"#CCCC00\")\nancreg_list <- c(\"Western_Africa_Niger-Congo\",\"Central_West_Africa_Niger-Congo\",\n                 \"East_Africa_Niger-Congo\",\"East_Africa_Nilo-Saharan\",\"East_Africa_Afro-Asiatic\",\n                 \"South_Africa_Niger-Congo\",\"South_Africa_KhoeSan\",\"Eurasia\" )\npopplot <- scan(\"/mnt/kwiat/home/popgen/scripts/poplists/MalariaGen23EthnicGroups1KGSouthAfricaFinalAnalysisPopsSSAonlyOrder.txt\",what=\"char\")\npopplot <- popplot[popplot!=\"SEMI-BANTU\"]\npopplotorder <- popplot\npopplot <- factor(popplot,levels=popplotorder)\n\n## PULL IN DATA\nadmixturesources2 <- read.table(\"data/MalariaGenGlobetrotterAdmixtureSources3.txt\",header=T,row.names=1,as.is=T)\n#final.res2plot2 <- read.table(\"data/MalariaGenGlobetrotter2plot.txt\",header=T,row.names=1,as.is=T)\nfinal.res2plot <- read.table(\"data/MalariaGenGlobetrotter2plotFinal.txt\",header=T,row.names=1,as.is=T)\nadmixturesources2 <- admixturesources2[,levels(popplot)]\ndateboots <- read.table(\"data/MalariaGenGlobetrotterOneDateBootstraps.txt\",header=T,row.names=1,as.is=T)\ndate2boots <- read.table(\"data/MalariaGenGlobetrotterTwoDateBootstraps.txt\",header=T,row.names=1,as.is=T)\nbest_ald <- read.table(\"data/MalariaGenBestAlder.txt\",header=T,as.is=T,comment.char=\"\",fill=T)\n\n\n## DEFINE THE REGION AND COLOURS FOR EACH OF THE DIFFERENT SOURCES\nsrcreg <- getPopRegion(tidyNames(colnames(admixturesources2),fula=T),popkey)\nregions <- as.character(ancreg_list)\nsrcreg[tidyNames(colnames(admixturesources2),fula=T) == \"KARRETJIE\"] <- \"South_Africa_KhoeSan\"\nsrcreg <- factor(srcreg,levels=regions)\nsrccols <- pcolshex[srcreg]\nsrccols <- as.vector(srccols)\nsrccols[srccols==\"black\"] <- \"grey\"\n\n###########################################################\n## SORT OUT RESULTS TO PLOT\npltable <- final.res2plot\npltable <- pltable[!pltable$Result%in%c(\"U\",\"NA\"),]\npltable$Result[pltable$Result==\"1D(2D)\"] <- \"1D\"\npltable$Result[pltable$Result==\"1MW(2D)\"] <- \"1MW\"\n\nnores <- popplot[!popplot%in%pltable$Cluster]\nnoprop <- FALSE ## USE ACTUAL PROPORTIONS IN SOURCE BAR CHARTS?\n\n## TO MAKE SIMILAR SOURCES ALIGN IN THE FIGURE BELOW, WE MIGHT SOMETIMES\n## WANT TO DEFINE THE MAJOR SOURCE AS THE ONE THAT CONTRIBUTES THE \n## LEAST TO AN EVENT. rev_pops ALLOWS US TO REVERSE WHICH IS THE MAJOR\n## AND WHICH IS THE MINOR SOURCE IN THE OUTPUT TABLE\nrev_pops <- c(\"KHWE\",\"AMAXHOSA\",\"SEBANTU\",\"MALAWI\")\npops <- as.character(pltable$Cluster)\n## I'VE ADDED A FUNCTION TO PULL THESE THINGS OUT\ntempresults <- addGTresults(pltable,rev_pops)\nall_dates <- tempresults[[1]]\nall_plot_mat <- tempresults[[2]]\nall_src_mat <- tempresults[[3]]\ndboots <- tempresults[[4]]\nallsources <- tempresults[[5]]\n\n\n###########################################################\n## NEED TO MAKE SURE THAT WE'RE USING THE SAME DATE BOOTS AS\n## THOSE REPORTED IN FIGURE 4\n\ndboots2get <- final.res2plot[,c(1,2,4)]\ndboots2get$boots <- \"dateboots\"\ndboots2get$boots[dboots2get$Result==\"2D\"] <- \"date2boots\"\ndboots2get$pick <- 1\ndboots2get$pick[dboots2get$Result==\"2D\"] <- \"both\"\ntest <- dboots2get$Cluster%in%popkey$Ethnic_Group[popkey$RegionM==\"Western_Africa_Niger-Congo\"]\ndboots2get$boots[test] <- \"date2boots\"\ndboots2get$pick[test] <- \"2\"\n\n## NOW UPDATE dboots\nfor(i in 1:nrow(dboots2get))\n{\n    run <- dboots2get$Analysis[i]\n    tmp <- get(dboots2get$boots[i])\n    tmp <- tmp[tmp$pop==dboots2get$Cluster[i]&tmp$X.main.==run,]\n    if(dboots2get$boots[i] == \"dateboots\")\n    {\n        bts <- tmp$date1.est.boot\n        if(length(bts) < 100) bts <- c(bts,rep(mean(bts),100-length(bts)))\n            \n    } else if(dboots2get$boots[i] == \"date2boots\" & dboots2get$pick[i] == 2)\n    {\n        bts <- tmp$date2.est.boot\n        if(length(bts) < 100) bts <- c(bts,rep(mean(bts),100-length(bts)))\n    } else\n    {\n        bts <- tmp$date1.est.boot\n        if(length(bts) < 100) bts <- c(bts,rep(mean(bts),100-length(bts)))\n        bts2 <- tmp$date2.est.boot\n        if(length(bts2) < 100) bts2 <- c(bts2,rep(mean(bts2),100-length(bts2)))\n        bts <- rbind(bts,bts2)\n    }\n    dboots[dboots[,1]==dboots2get$Cluster[i],6:ncol(dboots)] <- bts\n}\n\n\n\n\n\n###########################################################\n## PLOT DATE DENSITIES\n## RESHAPE DATEBOOTS FOR GGPLOT\ndboots2 <- c()\nfor(i in 1:nrow(dboots))\n{\n    tboots <- cbind(dboots[i,1],dboots[i,4],dboots[i,5],as.numeric(dboots[i,6:ncol(dboots)]))\n    colnames(tboots) <- c(\"pop\",\"don1\",\"don2\",\"dates\")\n    dboots2 <- rbind(dboots2,tboots)\n}\ndboots2 <- data.frame(dboots2,stringsAsFactors=F)\ndboots2$dates <- 1950-round((sapply(dboots2$dates,as.numeric) * (29+1))-65)\nfor(i in c(\"pop\",\"don1\",\"don2\"))\n{\n    newregs <- dboots2[,i]\n    newregs <- as.character(sapply(newregs,function(x){\n        popkey$RegionM[popkey$Ethnic_Group==x]\n    }))\n    dboots2 <- cbind(dboots2,newregs)\n    colnames(dboots2)[ncol(dboots2)] <- paste0(i,\".reg\")\n}\n################################################################################\n## WHAT ABOUT SPLITTING UP SOURCES INTO ACUTAL MIXTURES?\n## RESHAPE DATEBOOTS FOR GGPLOT\n## GET THE ANCESTRY FOR EACH SOURCE\nevent_srcs <- apply(allsources[,6:ncol(allsources)],2,as.numeric)\n## ROUND TO THE NEAREST 0.01\nevent_srcs[event_srcs < 0.025] <- 0\nevent_srcs <- event_srcs/rowSums(event_srcs)\nevent_srcs <- event_srcs*100\nevent_srcs <- apply(event_srcs,2,round)\nevent_srcs <- event_srcs*as.numeric(allsources[,4])\n\n## NOW GET SOURCE CONRITBUTIONS IN PROPORTION TO EFFECT ON EVENTS\n#for(i in 1:nrow(event_srcs)) event_srcs[i,] <- event_srcs[i,] * as.numeric(allsources[i,4])\n\n\n\n## NOW FOR EACH EVENT, MULTIPLY THE DATES BY EACH OF THE COLUMNS...\ndboots3 <- c()\nevent_pop <- unique(dboots[,1])\n\nfor(pop in event_pop)\n{\n    res <- unique(dboots[dboots[,1]==pop,3])\n    don1 <- dboots[dboots[,1]==pop,4]\n    don2 <- dboots[dboots[,1]==pop,5]\n        \n    event_row <- allsources[,1] == pop & allsources[,2] == res\n    facts <- event_srcs[event_row,]\n    date_row <- dboots[,1] == pop\n    if(sum(date_row) == 2)   dates <- apply(apply(dboots[date_row,6:ncol(dboots)],2,as.numeric),2,round)\n    if(sum(date_row) == 1)   dates <- sapply(sapply(dboots[date_row,6:ncol(dboots)],as.numeric),round)\n    for(j in 1:nrow(facts))\n    {\n        tfacts <- facts[j,facts[j,]>0]\n        for(k in 1:length(tfacts))\n        {\n            if( j %in% c(1,2) ) date_row <- 1\n            if( j %in% c(3,4) ) date_row <- 2\n            if( j %in% c(1,3) ) src <- \"min\"\n            if( j %in% c(2,4) ) src <- \"maj\"\n            comp_prop <- as.numeric(round(tfacts[k]))\n            if(comp_prop<1) comp_prop <- 1\n            if(!is.null(nrow(dates))) dateprops <- rep(dates[date_row,],comp_prop)\n            if(is.null(nrow(dates)))  dateprops <- rep(dates,comp_prop)\n            pop_reg <- getPopRegion(tidyNames(pop,fula=T),popkey)\n            if(pop == \"KARRETJIE\") pop_reg <- \"South_Africa_KhoeSan\"\n            don_comp <- names(tfacts[k])\n            don_comp_reg <- getPopRegion(tidyNames(don_comp,fula=T),popkey)\n            if(don_comp == \"KARRETJIE\") don_comp_reg <- \"South_Africa_KhoeSan\"\n            tboots <- cbind(pop,pop_reg,\n                            res,don1[date_row],don2[date_row],\n                            don_comp,don_comp_reg,\n                            src,dateprops)\n            colnames(tboots) <- c(\"pop\",\"pop.reg\",\"res\",\"don1\",\"don2\",\"don1.component\",\n                                  \"don1.component.reg\",\"src\",\"dates\")\n            dboots3 <- rbind(dboots3,tboots)\n        }\n    }\n}\n\ndboots3 <- data.frame(dboots3,stringsAsFactors=F)\ndboots3$dates <- sapply(sapply(dboots3$dates,as.numeric),makeDate,add_BCE=F)\nplotXlimggplot <- c(1950,-2000)\n\n###################################################\n### AND PLOT\ndboots4 <- dboots3\ndboots4$don1.component.cnt <- dboots4$don1.component.reg\n#dboots4$don1.component <- factor(dboots4$don1.component,levels=popplot,labels=popplot)\nreg_labs <- c(\"West Africa NC\",\"Central West Africa NC\",\"East Africa NC\",\n              \"South Africa NC\",\"Nilo-Saharan\",\"Afroasiatic\",\n              \"Khoesan\",\"Eurasia\")\ndboots4$pop.reg <- factor(dboots4$pop.reg,levels=ancreg_list[c(1:3,6,4,5,7,8)],labels=reg_labs)\ndens_info <- cbind(reg_labs,pcolshex[c(1:3,6,4,5,7,8)],ancreg_list[c(1:3,6,4,5,7,8)])\n###################################################\n## REPLACE OLD WITH NEW\nfor(i in c(1:8))\n{\n    old_reg <- dens_info[i,3]\n    new_reg <- dens_info[i,1]\n    dboots4$don1.component.cnt[dboots4$don1.component.reg==old_reg] <- new_reg\n}\n\n\n## ADD A FEW EXTRA LEVELS TO don1.component.reg\n## ie SPLIT UP EURASIA\n## HIGHLIGHT FULAI AND SEMI-BANTU\n## NORTH EUROPE\npops <- c(\"CEU\",\"GBR\",\"FIN\")\nnew_pops <- \"North Europe\"\nnew_col <- \"#eeee13\"\ndboots4$don1.component.cnt[dboots4$don1.component%in%pops] <- new_pops\ndens_info <- rbind(dens_info,c(new_pops,new_col))\n\n## SOUTH EUROPE\npops <- c(\"IBS\",\"TSI\")\nnew_pops <- \"South Europe\"\nnew_col <- \"#CCCC00\"\ndboots4$don1.component.cnt[dboots4$don1.component%in%pops] <- new_pops\ndens_info <- rbind(dens_info,c(new_pops,new_col))\n\n## SOUTH ASIA\npops <- c(\"KHV\",\"GIH\")\nnew_pops <- \"South Asia\"\nnew_col <- \"#787833\"\ndboots4$don1.component.cnt[dboots4$don1.component%in%pops] <- new_pops\ndens_info <- rbind(dens_info,c(new_pops,new_col))\n\n## EAST ASIA\npops <-c(\"CHB\",\"CHS\",\"CHD\",\"CDX\",\"JPT\",\"PELII\")\nnew_pops <- \"East Asia\"\nnew_col <- \"#8B8878\"\ndboots4$don1.component.cnt[dboots4$don1.component%in%pops] <- new_pops\ndens_info <- rbind(dens_info,c(new_pops,new_col))\n\n## SEMI-BANTU\n# pops <- c(\"BANTU\",\"SEMI.BANTU\")\n# new_pops <- \"Bantu/Semi-Bantu\"\n# new_col <- \"#FF001E\"\n# dboots4$don1.component.cnt[dboots4$don1.component%in%pops] <- new_pops\n# dens_info <- rbind(dens_info,c(new_pops,new_col))\n\n## GET RID OF THE EURASIA LEVEL\ndens_info <- dens_info[dens_info[,\"reg_labs\"]!=\"Eurasia\",]\n\n\n## MAKE INTO A FACTOR\ndboots4$don1.component.cnt <- factor(dboots4$don1.component.cnt,\n                                     levels=dens_info[,\"reg_labs\"],\n                                     labels=dens_info[,\"reg_labs\"])\n## sort out colours\ndens_cols <- dens_info[,2]\n\n##################################################\n## SPLIT MAJOR AND MINOR SOURCES\ndbootsMin <- dboots4[dboots4[,\"src\"]==\"min\",]\ndbootsMaj <- dboots4[dboots4[,\"src\"]==\"maj\",]\n\n## MAKE PRETTY NAMES FOR MINOR SOURCE REGIONS\ndbootsMin$don1.component.reg <- sapply(dbootsMin$don1.component.reg,as.character)\nfor(i in unique(dbootsMin$don1.component.reg)[grep(\"Niger-Congo\",unique(dbootsMin$don1.component.reg))])\n{\n    dbootsMin$don1.component.reg <- gsub(i,\"All Niger Congo\",dbootsMin$don1.component.reg)\n}\nnew_regs <- unique(dbootsMin$don1.component.reg)\nnew_regs <- gsub(\"\\\\_\",\" \",new_regs)\nnew_regs <- gsub(\"South Africa KhoeSan\",\"Khoesan\",new_regs)\nnew_regs <- gsub(\"East Africa Nilo-Saharan\",\"Nilo-Saharan\",new_regs)\nnew_regs <- gsub(\"East Africa Afro-Asiatic\",\"Afroasiatic\",new_regs)\nnew_regstab <- cbind(unique(dbootsMin$don1.component.reg),new_regs)\n\nfor(i in 2:nrow(new_regstab))\n{\n    dbootsMin$don1.component.reg <- gsub(new_regstab[i,1],new_regstab[i,2],dbootsMin$don1.component.reg)\n}\n\ndbootsMin$don1.component.reg <- factor(dbootsMin$don1.component.reg,levels=new_regs[c(1,4,3,5,2)])\n\n## NOW FOR MAJOR SOURCES\ndbootsMaj$don1.component.reg <- sapply(dbootsMaj$don1.component.reg,as.character)\nfor(i in unique(dbootsMaj$don1.component.reg)[grep(\"Niger-Congo\",unique(dbootsMaj$don1.component.reg))])\n{\n    dbootsMaj$don1.component.reg <- gsub(i,\"All Niger Congo\",dbootsMaj$don1.component.reg)\n}\n\nfor(i in 2:nrow(new_regstab))\n{\n    dbootsMaj$don1.component.reg <- gsub(new_regstab[i,1],new_regstab[i,2],dbootsMaj$don1.component.reg)\n}\ndbootsMaj$don1.component.reg <- factor(dbootsMaj$don1.component.reg,levels=new_regs[c(1,4,3,5,2)])    \n\n\np7 <- ggplot(dbootsMin, aes(x=dates)) +\n    geom_density(aes(fill=don1.component.cnt,colour=don1.component.cnt,y=..count..), position=\"stack\") +\n    geom_density(data=dbootsMaj,\n                 aes(fill=don1.component.cnt,colour=don1.component.cnt,y=-..count..), position=\"stack\") +\n    xlab(\"Date of Admixture\") + ylab(\"Donor Region\") +\n    ggtitle(\"Recipient Region\") +\n    scale_fill_manual(values=as.character(dens_cols),name=\"\") +\n    scale_colour_manual(values=as.character(dens_cols),name=\"\") +\n    theme_bw() +\n    guides(linetype=FALSE,\n           colour = guide_legend(nrow = 3),\n           fill = guide_legend(nrow = 3)) +\n    coord_cartesian(xlim = plotXlimggplot) +\n    facet_grid(don1.component.reg~pop.reg) + #don1.component.reg\n    theme(strip.text.y = element_text(size= 10 ),\n          strip.text.x = element_text(size= 10 ),\n          strip.background = element_rect(colour=\"black\", fill=\"white\"),\n          axis.text.x = element_text(size = 10 ),\n          axis.title.x = element_text(size = 16 ),\n          axis.text.y = element_text(size = 10 ),\n          axis.title.y = element_text(size = 16 ),\n          plot.title = element_text(size = 16),\n          panel.margin.x = unit(0.5, \"lines\")) +\n    scale_x_reverse(breaks=c(1000,0,-1000),\n                    labels=c(\"1000\\nCE\",\"0\",\"1000\\nBCE\")) +\n    theme(axis.ticks.length = unit(0.001, \"mm\")) +\n    theme(plot.margin = unit(c(0,1,0.5,0), \"cm\")) +\n    scale_y_continuous(expand = c(0,0)) +\n    theme(axis.text.y = element_blank(),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank()) +\n    geom_vline(xintercept = c(1950,1000,0,-1000,-2000), linetype = \"longdash\",size=0.1) +\n    theme(legend.position='bottom',\n          legend.justification = 'right',\n          legend.text = element_text(size=16))\n\n\npdf(paste(\"figures/PropsAndDatesDensitiesAllRegBothSourcesLanguage.pdf\",sep=\"\"),width=12,height=9)\nprint(p7)\ndev.off()\n\n",
    "created" : 1455186602609.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1681060205",
    "id" : "E2699752",
    "lastKnownWriteTime" : 1455296697,
    "path" : "~/repos/popgen/plotting_scripts/plotGlobetrotterDensities.R",
    "project_path" : "plotting_scripts/plotGlobetrotterDensities.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}