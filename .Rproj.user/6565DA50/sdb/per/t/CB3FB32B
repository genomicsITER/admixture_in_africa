{
    "contents" : "#########################################################################\n### PLOT OF TVD v F_st FOR PAPER \n## NOTE THAT I FIRST USED SMARTPCA TO GENERATE F_st OUTPUT\nsetwd(\"~/repos/popgen/\")\n############################################################\n## SOURCE SOME USEFUL FUNCTIONS FROM copyselection PACKAGE ##\n## ~~~~~~~~~~~       !!! IN DEVELOPMENT !!!     ~~~~~~~~~~ ##\n############################################################\nmain_dir <- \"~/repos/\" ## where the code is kept\nsource(paste0(main_dir,\"popgen/packages_dev/functionWriter.R\"))\nsource(paste0(main_dir,\"popgen/packages_ext/FinestructureLibrary.R\"))\nsetwd(\"~/repos/popgen/\")\n###########################################################\n## DEFINE DATAFILES\nfst_file <- \"data/AllPopsPairwiseFstResults.txt\"\npopkey_file <- \"data/MalariaGenAdmixturePopulationOverviewNSAA.txt\"\ncv_file <- \"data/MalariaGen23EthnicGroups1KGSouthAfricaNoAmericaFinalALL2.chunklengths.out\"\n## LOAD POPKEY FILE ##\npopkey <- read.table(popkey_file,header=T,as.is=T)\npopkey$Ethnic_Group <- toupper(popkey$Ethnic_Group)\n\n###########################################################\n## GET FULL LIST OF POPULATIONS IN THE CORRECT PLOTTING ORDER ##\npopplot <- scan(\"data/MalariaGen23EthnicGroups1KGSouthAfricaFinalAnalysisPopsSSAonlyOrder.txt\",what=\"char\")\npopplot <- popplot[popplot!=\"SEMI.BANTU\"]\n## DEFINE COLOURS FOR REGIONS\npcolshex <- c(\"#0000CD\",\"#03B4CC\",\"#FF7F00\",\"#984EA3\",\"#FF69B4\",\"#A65628\",\"#4DAF4A\",\"#CCCC00\")\nancreg_list <- c(\"Western_Africa_Niger-Congo\",\"Central_West_Africa_Niger-Congo\",\n                 \"East_Africa_Niger-Congo\",\"East_Africa_Nilo-Saharan\",\"East_Africa_Afro-Asiatic\",\n                 \"South_Africa_Niger-Congo\",\"South_Africa_KhoeSan\",\"Eurasia\" )\n\n###########################################################\n## LOAD FST DATAFILE\nfstdata <- read.table(fst_file,header=F,as.is=T)\ncolnames(fstdata) <- c(\"pop1\",\"pop2\",\"fst\",\"se\")\n\n## GENERATE A MATRIX OF PAIRWISE FST VALUES\nfstmat <- matrix(NA,ncol=length(popplot),nr=length(popplot))\nrownames(fstmat) <- popplot\ncolnames(fstmat) <- rev(popplot)\nfor(i in 1:nrow(fstdata))\n{\n    p1 <- fstdata$pop1[i]\n    p2 <- fstdata$pop2[i]\n    fst <- fstdata$fst[i]\n    ser <- fstdata$se[i]\n    rownum <- (1:nrow(fstmat))[colnames(fstmat)==p1]\n    colnum <- (1:ncol(fstmat))[colnames(fstmat)==p2]\n    fstmat[p1,p2] <- fst\n    fstmat[p2,p1] <- fst\n}\n\n## MAKE SOME HEAT MAP COLOURS\ncols<-MakeColorYRP(final=c(0.2,0.2,0.2))\nignorebelow <- 0\nignoreabove <- 0.25\ncolscale<-c(ignorebelow,ignoreabove)\nfstmat[fstmat>ignoreabove] <- ignoreabove\n\n###########################################################\n## PLOT FST MATRIX\npdf(\"figures/AllPopsPairwiseFst.pdf\",height=10,width=11)\n    layout(matrix(c(1,2),1,2),widths=c(10,1))\n    par(mar=c(0.5,6,6,0.5))\n    image(1:dim(fstmat)[1],\n          1:dim(fstmat)[2],fstmat,\n          xaxt=\"n\",yaxt=\"n\",xlab=\"\",ylab=\"\",\n          col=cols,zlim=colscale,xaxs=\"i\",yaxs=\"i\",\n          useRaster=T)\n    for(i in popplot) \n    {\n        ii <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==i])]\n        axpos1 <- (1:length(popplot))[i==popplot]\n        axpos2 <- (length(popplot):1)[i==popplot]\n        mtext(2,text=tidyNames(i,fula=T,khoesan=T,tig=T),at=axpos2,col=ii,las=2,line=0.5)\n        mtext(3,text=tidyNames(i,fula=T,khoesan=T,tig=T),at=axpos1,col=ii,las=2,line=0.5)\n    }\n    ## SCALE\n    scalesplit <- 10\n    colindex<-t(matrix(seq(min(colscale),max(colscale),length.out=scalesplit),\n                       nrow=1,ncol=scalesplit)) # colour scale\n    par(mar=c(5,0.5,15,4))\n    image(1,1:scalesplit,t(colindex),\n          xaxt=\"n\",yaxt=\"n\",xlab=\"\",ylab=\"\",\n          col=cols,zlim=range(colindex),main=\"\",\n          useRaster=T)\n    scalelocs <- min(colindex)+(max(colindex)-min(colindex))*seq(0,1,length.out=11)\n    scalelocs <- round(scalelocs,3)\n    #scalelocs[1] <- paste0(\"<\",scalelocs[1])\n    scalelocs[length(scalelocs)] <- paste0(scalelocs[length(scalelocs)],\"+\")\n    scalephysicalpos <- seq(1,scalesplit,length.out=11)\n    axis(4,at=scalephysicalpos,labels=scalelocs,cex.axis=1,las=1)\n    box()\n\n    mtext(3,text=expression(F[ST]))\n\ndev.off()\n\n###########################################################\n### NOW MAKE NICE TABLE FOR SUPPLEWMENT\nfor(i in 1:nrow(fstdata))\n{\n    p1 <- fstdata$pop1[i]\n    p2 <- fstdata$pop2[i]\n    fst <- fstdata$fst[i]\n    ser <- fstdata$se[i]\n    \n    rownum <- (1:nrow(fstmat))[colnames(fstmat)==p1]\n    colnum <- (1:ncol(fstmat))[colnames(fstmat)==p2]\n    \n    if(rownum < colnum) fstmat[p1,p2] <- ser\n    if(rownum > colnum) fstmat[p2,p1] <- ser\n}\n\nfstmat <- fstmat[,rownames(fstmat)]\nrownames(fstmat) <- tidyNames(rownames(fstmat),fula=T)\ncolnames(fstmat) <- tidyNames(colnames(fstmat),fula=T)\n\nlibrary(xtable)\nnewtab <- xtable(fstmat[,1:48]*1000)\n\n### print all events\nnewlines <- c()\nnewlineord <- as.character(sapply(popplot,function(x){\n    ancreg_list[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==x])]}))\nfor(i in (2:length(newlineord))) if(newlineord[i]!=newlineord[(i-1)]) newlines <- c(newlines,i)\n\naddtorow          <- list()\naddtorow$pos      <- list()\naddtorow$pos[[1]] <- c(-1)\naddtorow$pos[[2]] <- c(newlines-1)\n\naddtorow$command[[1]]  <- \"fst results table\"\naddtorow$command[[2]] <- \"\\\\hline \\n\"\nprint(newtab, floating=FALSE,\n      tabular.environment=\"longtable\", \n      comment=FALSE,\n      include.colnames=TRUE,\n      include.rownames=TRUE,\n      caption.placement=\"top\",file=\"figures/AllPopsFstAfrica.tex\",\n      booktabs=TRUE,add.to.row=addtorow)#,\n\nnewtab <- xtable(fstmat[,49:60]*1000)\n\n### print all events\nnewlines <- c()\nnewlineord <- as.character(sapply(popplot,function(x){\n    ancreg_list[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==x])]}))\nfor(i in (2:length(newlineord))) if(newlineord[i]!=newlineord[(i-1)]) newlines <- c(newlines,i)\n\naddtorow          <- list()\naddtorow$pos      <- list()\naddtorow$pos[[1]] <- c(-1)\naddtorow$pos[[2]] <- c(newlines-1)\n\naddtorow$command[[1]]  <- \"fst results table\"\naddtorow$command[[2]] <- \"\\\\hline \\n\"\nprint(newtab, floating=FALSE,\n      tabular.environment=\"longtable\", \n      comment=FALSE,\n      include.colnames=TRUE,\n      include.rownames=TRUE,\n      caption.placement=\"top\",file=\"figures/AllPopsFstEurasia.tex\",\n      booktabs=TRUE,add.to.row=addtorow)#,\n\n###########################################################\n#### ESIMATES OF FST VALUES FOR PARTICULAR POPS\n# popa <- \"JUHOAN\"\n# popa <- \"CHONYI\"\n# tmp <- fstdata[fstdata$pop1==popa | fstdata$pop2 == popa,]\n# nopops <- c(asia,americas) #europe\n# tmp <- tmp[!tmp$pop1 %in% nopops,]\n# tmp <- tmp[!tmp$pop2 %in% nopops,]\n# mean(tmp$fst)\n# \n# popa <- nopops\n# tmp <- fstdata\n# tmp <- tmp[tmp$pop1 %in% nopops | tmp$pop2 %in% nopops,]\n# notboth <- tmp$pop1 %in% nopops & tmp$pop2 %in% nopops\n# tmp <- tmp[!notboth,]\n# \n# sd(tmp$fst)\n###########################################################\n## LOAD COPYING VECTORS\nlengths <- read.table(cv_file, header=T,row.names=1)\nx <- lengths\ncolnames(x) <- rownames(x)\n\n## LOAD INDIVIDUAL CLUSTER ASSIGNMENT:: NEEDS SERVER ACCESS\nfinal_clusts <- vector(\"list\",length(popplot))\nfor(i in 1:length(popplot))\n{\n    ii <- as.character(popplot[i])\n    names(final_clusts)[i] <- ii\n    if(ii ==\"SEMI.BANTU\") ii <- \"SEMI-BANTU\"\n    iinds <- scan(paste0(\"/mnt/kwiat/home/popgen/scripts/finalpoplists/\",ii,\"finalinds.txt\"),what=\"char\")\n    final_clusts[[i]] <- iinds\n}\npaintedinds <- read.table(\"/mnt/kwiat/data/bayes/users/george/popgen/analysis3/chromopainter/samplelists/MalariaGen23EthnicGroups1KGSouthAfricaNoAmericaFinalCP.inds\",sep=\" \")\n\n## CHANGE ACTUAL SAMPLE IDS TO CP LABELS\nfinal_clusts2<- lapply(final_clusts,function(x){as.character(paintedinds[match(unlist(x),paintedinds[,2]),1])})\n\n## NOW GENERATE POPULATION AVERAGE COPYING VECTORS ##\nx <- rowsAsMapClusts(final_clusts2,x,mean)\nx <- t(rowsAsMapClusts(final_clusts2,t(x),sum))\nx <- x/rowSums(x)\n\n## ESTIMATE PAIRWISE TVD LIKE LESLIE ET AL 2015; VAN DORP ET AL 2015\ntvdall <- tvd(x)\n\n## MAKE A SIMILAR MATRIX TO FST\ntvdmat <- matrix(NA,ncol=length(popplot),nr=length(popplot))\nrownames(tvdmat) <- popplot\ncolnames(tvdmat) <- rev(popplot)\nfor(i in 1:nrow(tvdall))\n{\n    p1 <- as.character(tvdall$pop1[i])\n    p2 <- as.character(tvdall$pop2[i])\n    tvdi <- as.numeric(as.character(tvdall$tvd[i]))\n    rownum <- (1:nrow(tvdmat))[colnames(tvdmat)==p1]\n    colnum <- (1:ncol(tvdmat))[colnames(tvdmat)==p2]\n    tvdmat[p1,p2] <- tvdi\n    tvdmat[p2,p1] <- tvdi\n}\n\n\nignorebelow <- 0\nignoreabove <- 1\ncolscale<-c(ignorebelow,ignoreabove)\ntvdmat[tvdmat>ignoreabove] <- ignoreabove\n\npdf(\"figures/AllPopsPairwiseTVD.pdf\",height=10,width=11)\n    layout(matrix(c(1,2),1,2),widths=c(10,1))\n    par(mar=c(0.5,6,6,0.5))\n    image(1:dim(tvdmat)[1],\n          1:dim(tvdmat)[2],tvdmat,\n          xaxt=\"n\",yaxt=\"n\",xlab=\"\",ylab=\"\",\n          col=cols,zlim=colscale,xaxs=\"i\",yaxs=\"i\",\n          useRaster=T)\n    for(i in popplot) \n    {\n        ii <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==i])]\n        axpos1 <- (1:length(popplot))[i==popplot]\n        axpos2 <- (length(popplot):1)[i==popplot]\n        mtext(2,text=tidyNames(i,fula=T,khoesan=T,tig=T),at=axpos2,col=ii,las=2,line=0.5)\n        mtext(3,text=tidyNames(i,fula=T,khoesan=T,tig=T),at=axpos1,col=ii,las=2,line=0.5)\n    }\n    ## SCALE\n    scalesplit <- 10\n    colindex<-t(matrix(seq(min(colscale),max(colscale),length.out=scalesplit),\n                       nrow=1,ncol=scalesplit)) # colour scale\n    par(mar=c(5,0.5,15,4))\n    image(1,1:scalesplit,t(colindex),\n          xaxt=\"n\",yaxt=\"n\",xlab=\"\",ylab=\"\",\n          col=cols,zlim=range(colindex),main=\"\",\n          useRaster=T)\n    scalelocs <- min(colindex)+(max(colindex)-min(colindex))*seq(0,1,length.out=11)\n    scalelocs <- round(scalelocs,3)\n    scalelocs[length(scalelocs)] <- paste0(scalelocs[length(scalelocs)],\"+\")\n    scalephysicalpos <- seq(1,scalesplit,length.out=11)\n    axis(4,at=scalephysicalpos,labels=scalelocs,cex.axis=1,las=1)\n    box()\n    \n    mtext(3,text=expression(TVD))\n\ndev.off()\n\n\n######################################################################\n## COMBINE BOTH OF THE DATAFRAMES TO MAKE A SINGLE MATRIX AND PLOT\n## put them both in the same matrix\nbothmat <- tvdmat\nignorebelow <- 0\nignoreabove <- 0.75\nbothmat[bothmat>ignoreabove] <- ignoreabove\n\n## now re-scale so that the units are same as fstmat (max(fstmat) = 0.25)\nbothmat <- bothmat/3\nbothmat <- bothmat[rev(rownames(bothmat)),]\nrepmat <- t(fstmat[rev(rownames(fstmat)),rev(colnames(fstmat))]) #\nbothmat[upper.tri(bothmat)] <- repmat[upper.tri(repmat)]\nbothmat <- bothmat[rev(rownames(bothmat)),]\n\nignorebelow <- 0\nignoreabove <- 0.25\ncolscale<-c(ignorebelow,ignoreabove)\n\n## combine into same dataframe\nalldata <- tvdall\nalldata$fst <- 0\nfor(i in 1:nrow(alldata))\n{\n    p1 <- as.character(alldata$pop1[i])\n    p2 <- as.character(alldata$pop2[i])\n    fstrow <- (as.character(fstdata$pop1) == p1 & as.character(fstdata$pop2) == p2) | (as.character(fstdata$pop1) == p2 & as.character(fstdata$pop2) == p1)  \n    alldata$fst[i] <- fstdata$fst[fstrow]\n}\n\natvd <- as.numeric(as.character(alldata$tvd))\nafst <- as.numeric(as.character(alldata$fst))\n\npdf(\"figures/AllPopsPairwiseFSTTVD.pdf\",height=10,width=12)\n    layout(matrix(c(1,2,1,3),byrow=T,2,2),widths=c(10,2),heights=c(8,2))\n    par(mar=c(0.5,8,8,0.5))\n    image(1:dim(bothmat)[1],\n          1:dim(bothmat)[2],bothmat,\n          xaxt=\"n\",yaxt=\"n\",xlab=\"\",ylab=\"\",\n          col=cols,zlim=colscale,xaxs=\"i\",yaxs=\"i\",\n          useRaster=T)\n    for(i in popplot) \n    {\n        ii <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==i])]\n        axpos1 <- (1:length(popplot))[i==popplot]\n        axpos2 <- (length(popplot):1)[i==popplot]\n        mtext(2,text=tidyNames(i,fula=T,khoesan=T,tig=T),at=axpos2,col=ii,las=2,line=0.5)\n        mtext(3,text=tidyNames(i,fula=T,khoesan=T,tig=T),at=axpos1,col=ii,las=2,line=0.5)\n    }\n    box()\n    mtext(3,text=\"A\",adj=0,line=4,cex=2,xpd=T,at=-5)\n    \n    ## SCALE\n    scalesplit <- 11\n    colindex<-t(matrix(seq(min(colscale),max(colscale),length.out=scalesplit),\n                       nrow=1,ncol=scalesplit)) # colour scale\n    par(mar=c(5,5,15,5))\n    image(1,1:scalesplit,t(colindex),\n          xaxt=\"n\",yaxt=\"n\",xlab=\"\",ylab=\"\",\n          col=cols,zlim=range(colindex),main=\"\",\n          useRaster=T)\n    scalelocs <- min(colindex)+(max(colindex)-min(colindex))*seq(0,1,length.out=11)\n    scalelocs <- round(scalelocs,3)\n    scalelocs2 <- scalelocs*3\n    scalelocs[1] <- paste0(\">\",scalelocs[1])\n    scalelocs2[1] <- paste0(\">\",scalelocs2[1])\n    scalelocs[length(scalelocs)] <- paste0(scalelocs[length(scalelocs)],\"+\")\n    scalelocs2[length(scalelocs2)] <- paste0(scalelocs2[length(scalelocs2)],\"+\")\n    scalephysicalpos <- seq(1,scalesplit,length.out=11)\n    axis(4,at=scalephysicalpos,labels=scalelocs,cex.axis=1,las=1,adj=0.5,lwd=0)\n    axis(2,at=scalephysicalpos,labels=scalelocs2,cex.axis=1,las=1,adj=0.5,lwd=0)\n    box()\n    \n    title1 <- as.list(expression(italic(TVD), \"(lower)\"))\n    title2 <- as.list(expression(italic(F[ST]), \"(upper)\"))\n    \n    mtext(do.call(expression, title1 ),side=3,at=0.2,line = c(1,0))\n    mtext(do.call(expression, title2 ),side=3,at=1.8,line = c(1,0))                  \n    \n    par(mar=c(4,4,0.5,0.5))\n    plot(atvd,afst,pch=20,xlab=\"\",ylab=\"\",yaxt=\"n\",xaxt=\"n\")\n    yax <- c(0,0.1,0.2,0.3)\n    xax <- c(0,0.3,0.6,0.9)\n    axis(2,las=2,at=yax,labels=yax)\n    axis(1,at=xax,labels=xax)\n    ctest <- cor.test(atvd,afst)\n    r2 <-round(ctest$estimate,2)\n    \n    mtext(3,text=\"B\",adj=0,line=0,cex=2,xpd=T,at=-0.5)\n    mtext(3,text=expression(\" \" ~ italic(R^2) == 0.79),line=-2,adj=0,cex=0.75)\n    mtext(3,text=expression(\" \" ~ italic(P) < 0.0001),line=-3,adj=0,cex=0.75)\n    \n    mtext(expression(italic(TVD)),side=1,line=c(2))\n    mtext(expression(italic(F[ST])),side=2,line=c(2))\n\ndev.off()\n\n###########################################################################\n## MAKE A NICE TABLE FOR THE SUPPLEMENT\nlibrary(xtable)\ntemptab <- round(tvdmat[,60:13]*1000)\nnewtab <- xtable(temptab, digits=0)\n\n### print all events\nnewlines <- c()\nnewlineord <- as.character(sapply(popplot,function(x){\n    ancreg_list[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==x])]}))\nfor(i in (2:length(newlineord))) if(newlineord[i]!=newlineord[(i-1)]) newlines <- c(newlines,i)\n\naddtorow          <- list()\naddtorow$pos      <- list()\naddtorow$pos[[1]] <- c(-1)\naddtorow$pos[[2]] <- c(newlines-1)\n\naddtorow$command[[1]]  <- \"tvd results table\"\naddtorow$command[[2]] <- \"\\\\hline \\n\"\nprint(newtab, floating=FALSE,\n      tabular.environment=\"longtable\", \n      comment=FALSE,digits=0,\n      include.colnames=TRUE,\n      include.rownames=TRUE,\n      caption.placement=\"top\",file=\"figures/AllPopsTVDAfrica.tex\",\n      booktabs=TRUE,add.to.row=addtorow)#,\n\ntemptab <- round(tvdmat[,12:1]*1000)\nnewtab <- xtable(temptab, digits=0)\n\n### print all events\nnewlines <- c()\nnewlineord <- as.character(sapply(popplot,function(x){\n    ancreg_list[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==x])]}))\nfor(i in (2:length(newlineord))) if(newlineord[i]!=newlineord[(i-1)]) newlines <- c(newlines,i)\n\naddtorow          <- list()\naddtorow$pos      <- list()\naddtorow$pos[[1]] <- c(-1)\naddtorow$pos[[2]] <- c(newlines-1)\n\naddtorow$command[[1]]  <- \"TVD results table\"\naddtorow$command[[2]] <- \"\\\\hline \\n\"\nprint(newtab, floating=FALSE,\n      tabular.environment=\"longtable\", \n      comment=FALSE,\n      include.colnames=TRUE,\n      include.rownames=TRUE,\n      caption.placement=\"top\",file=\"figures/AllPopsTVDEurasia.tex\",\n      booktabs=TRUE,add.to.row=addtorow)#,\n",
    "created" : 1453730132606.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4186263897",
    "id" : "CB3FB32B",
    "lastKnownWriteTime" : 1453735002,
    "path" : "~/repos/popgen/plotting_scripts/plotTVDvFst.R",
    "project_path" : "plotting_scripts/plotTVDvFst.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}