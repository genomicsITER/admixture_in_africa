{
    "contents" : "### SCRIPT TO PLOT MALDER RESULTS FOR PAPER -- CAN USE RESULTS FROM DIFFERENT GENETIC MAPS ###\nsetwd(\"~/repos/popgen/\")\n\n############################################################\n## SOURCE SOME USEFUL FUNCTIONS FROM copyselection PACKAGE ##\n## ~~~~~~~~~~~       !!! IN DEVELOPMENT !!!     ~~~~~~~~~~ ##\n############################################################\nmain_dir <- \"~/repos/\" ## where the code is kept\nsource(paste0(main_dir,\"popgen/packages_dev/functionWriter.R\"))\nlibrary(xtable)\nsetwd(paste0(main_dir,\"popgen/\"))\n###########################################################\n## DEFINE DATAFILES\npopkey_file <- \"data/MalariaGenAdmixturePopulationOverviewNSAA.txt\"\n\n## LOAD POPKEY FILE ##\npopkey <- read.table(popkey_file,header=T,as.is=T)\npopkey$Ethnic_Group <- toupper(popkey$Ethnic_Group)\n## LOAD POPORDER FILE ##\npopplot <- scan(\"/mnt/kwiat/home/popgen/scripts/poplists/MalariaGen23EthnicGroups1KGSouthAfricaFinalAnalysisPopsSSAonlyOrder.txt\",what=\"char\")\npopplotorder <- popplot\n\n## CHOOSE ONLY THE AFRICAN POPS FROM POPPLOT ORDER\npopplotorder <- popplotorder[c(1:16,18:49)]\npoplist <- factor(popplotorder,levels=popplotorder)\npoplist<- as.matrix(poplist)\nn_pops <- nrow(poplist)\nin_dir <- \"/mnt/kwiat/data/bayes/users/george/popgen/analysis3/alder/output/\"\nanalys <- c(\"HAPMAP\",\"CeuMap\",\"AfrMap\")\nmalder_file <- \"~/R/Copy/Rprojects/AfricaPOPGEN/manuscript/f3tables/AllPopsMalderFinalALL.txt\"\nmalder_plot <- read.table(malder_file,header=T, as.is=T)\nleginfo_file <- \"data/MalariaGenAdmixturePopulationKey.txt\"\nleginfo <- read.table(leginfo_file,header=T,comment.char=\"\", as.is = T)\npopkey_file <- \"data/MalariaGenAdmixturePopulationOverviewNSAA.txt\"\npopkey <- read.table(popkey_file,header=T,as.is=T)\npopkey$Ethnic_Group <- toupper(popkey$Ethnic_Group)\n\n### DEFINE COLOURS ##\npcolshex <- c(\"#0000CD\",\"#03B4CC\",\"#FF7F00\",\"#984EA3\",\"#FF69B4\",\"#A65628\",\"#4DAF4A\",\"#CCCC00\")\nancreg_list <- c(\"Western_Africa_Niger-Congo\",\"Central_West_Africa_Niger-Congo\",\n                 \"East_Africa_Niger-Congo\",\"East_Africa_Nilo-Saharan\",\"East_Africa_Afro-Asiatic\",\n                 \"South_Africa_Niger-Congo\",\"South_Africa_KhoeSan\",\"Eurasia\" )\n\n###################################################################\n## DO THE DIFFERENT MAPS INFER THE SAME NUMBER OF EVENTS? ##\nfor(i in unique(malder_plot$EthnicGroup))\n{\n    tmp <- malder_plot[malder_plot$EthnicGroup==i,]\n    if(!nrow(tmp) %in% c(3,6)) print(tmp)\n}\n###################################################################\n\npop_vec <- unique(malder_plot$EthnicGroup)\nn_pops <- length(pop_vec)\n\n### FOR A GIVEN ANALYSIS, SUBSET THE MAIN DATABASE AND PLOT\n\nfor(analy in c(\"HAPMAP\",\"AfrMap\",\"CeuMap\"))\n{\n    ## ORDER pop_vec BY THE DATES AND ANCESTRIES IN THE HAPMAP ##\n    order_analy <- analy\n    malder <- malder_plot[malder_plot$Rec.Map==order_analy,]\n    dup_pops <- malder$EthnicGroup[duplicated(malder$EthnicGroup)]\n    ## ORDER ON THE FIRST EVENT SO MAKE SURE THIS IS THE FIRST ONE IN THE TABLE\n    for(i in dup_pops)\n    {\n        ii <- malder[malder$EthnicGroup==i,]\n        ii <- ii[order(ii$Date.Gens),]\n        malder[malder$EthnicGroup==i,] <- ii\n    }\n    malder <- malder[!duplicated(malder$EthnicGroup),]\n    malder$pop1 <- sapply(malder$Test.Pops,function(x)strsplit(x,split=\"\\\\;\")[[1]][1])\n    malder$pop2 <- sapply(malder$Test.Pops,function(x)strsplit(x,split=\"\\\\;\")[[1]][2])\n    malder$reg1 <- factor(getPopRegion(tidyNames(malder$pop1,fula=T),popkey),levels=rev(ancreg_list))\n    malder$reg2 <- factor(getPopRegion(tidyNames(malder$pop2,fula=T),popkey),levels=rev(ancreg_list))\n    malder <- malder[order(malder$reg1,malder$reg2,malder$Date.Gens,decreasing=T),]\n    pop_vec <- popplot[c(1:16,18:49)]#malder$EthnicGroup\n    \n    malder <- malder_plot[malder_plot$Rec.Map==analy,]\n    malder[malder$N.evs==0,2:ncol(malder)] <- 0\n    malder[malder$Main.Anc.p>0.05,2:ncol(malder)] <- 0\n    \n    ##################################################################\n    ## PLOT DATES AND MAP COMPARISONS\n    pdf(paste0(\"figures/AllPopsMalderTimesMapComps\",analy,\".pdf\"),height=9,width=9)\n        layout(matrix(c(1,1,1,2,3,4),3,2),widths=c(6,3))\n        par(mar=c(4,16,4,1))\n        comp_ax <- c(0,400)\n        comp_ax <- c(0,240)\n        x_labs3 <- c(2000,0,-2000,-5000,-10000)\n        x_labs3char <- c(\"2000\\nCE\",0,\"2000\\nBCE\",\"5000\\nBCE\",\"10000\\nBCE\")\n        x_labs3 <- c(2000,0,-2000,-5000)\n        x_labs3char <- c(\"2000\\nCE\",0,\"2000\\nBCE\",\"5000\\nBCE\")\n    \n        x_max <- min(x_labs3)\n        plot(0,0,xlim=rev(range(x_labs3)),\n             ylim=c(n_pops,1),type=\"n\",axes=F,xlab=\"\",ylab=\"\")\n        text(5000,-1,labels=LETTERS[1],adj=0,las=1,cex=2,lwd=3,xpd=T)\n        axis(1,at=x_labs3,labels=x_labs3char,cex.axis=1,tick=F,padj=0.5)\n        for(j in x_labs3) abline(v=j,lty=2)\n        mtext(\"Date of Admixture\",1,line=3)\n        \n        ## COLOURS FOR EACH GROUP\n        y_ax_cols <- c()\n        for(i in pop_vec) \n        {\n            if(i==\"SEMI-BANTU\") i <- \"SEMI-BANTU\"\n            ii <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==i])]\n            y_ax_cols <- c(y_ax_cols,ii)\n        }\n        \n        ## SET THE SCENE\n        for(i in 1:n_pops) axis(2,pos=4000,at=i,\n                                labels=tidyNames(pop_vec[i],fula=T, khoesan=T,tig=T),\n                                col.axis=y_ax_cols[i],las=2,tck=0,lwd=0,line=-0.5)\n        \n        for(i in seq(0.5,(n_pops+1),1)) abline(h=i,lty=3,lwd=0.5)\n        lines(x=c(3200,3200),y=c(0,n_pops+1),lwd=1,xpd=T)\n        \n        text(y=-1,x=3600,labels=\"1ST EVENT\",xpd=T,srt=35,adj=0)\n        text(y=-1,x=2800,labels=\"2ND EVENT\",xpd=T,srt=35,adj=0)\n        \n        ## NOW PLOT DATES AND ANCESTRIES ##\n        \n        ev1posa <- 3800\n        ev1posb <- 3400\n        ev2posa <- 3000\n        ev2posb <- 2600\n        \n        for(i in (1:length(pop_vec)))\n        {\n            pop1 <- as.character(pop_vec)[i]\n            tt <- malder[malder$EthnicGroup==pop1,]\n            tt <- tt[order(tt$Date.Gens),]\n            res_tmp <- nrow(tt)\n            if(nrow(tt)>0)\n            {\n                if(tt$Date.Gens>0)\n                {\n                    for(j in 1:nrow(tt))\n                    {\n                        date <- tt$Date.Gens[j]\n                        dateci <- tt$Date.Gens.CI[j]\n                        donpop1 <- strsplit(tt$Test.Pops[j],split=\"\\\\;\")[[1]][1]\n                        donanc1 <- getPopRegion(tidyNames(donpop1,fula=T),popkey)\n                        donpop2 <- strsplit(tt$Test.Pops[j],split=\"\\\\;\")[[1]][2]\n                        donanc2 <- getPopRegion(tidyNames(donpop2,fula=T),popkey)\n                        mainanc <- tt$Main.Anc[j]\n                        mainancp <- tt$Main.Anc.p[j]\n                    \n                        ## PLOT DATE\n                        arrows(makeDate(date-dateci,add_BCE=F),i,\n                               makeDate(date+dateci,add_BCE=F),i,\n                               angle=90,length=0.025,code=3)\n                        pcol1 <- pcolshex[ancreg_list==donanc1]\n                        pcol2 <- pcolshex[ancreg_list==donanc2]\n                        pnt_bg <- \"black\"\n                        #if(mainancp>0.001) pnt_bg <- \"grey\"\n                        #if(mainancp>0.05) pnt_bg <- \"white\"\n                        points(makeDate(date,add_BCE=F),i,pch=21,bg=pnt_bg, cex=2)\n                    \n                        ## PLOT EVENT ANCESTRIES\n                        if(j == 1)\n                        {\n                            points(ev1posa,i,pch=15,col=pcol1,xpd=T,cex=2)\n                            points(ev1posb,i,pch=15,col=pcol2,xpd=T,cex=2)\n                            if(donanc1 == mainanc) points(ev1posa,i,pch=22,xpd=T,cex=2,lwd=1.5)\n                            if(donanc2 == mainanc) points(ev1posb,i,pch=22,xpd=T,cex=2,lwd=1.5)\n                        }\n                        \n                        if(j == 2)\n                        {    points(ev2posa,i,pch=15,col=pcol1,xpd=T,cex=2)\n                             points(ev2posb,i,pch=15,col=pcol2,xpd=T,cex=2)\n                             if(donanc1 == mainanc) points(ev2posa,i,pch=22,xpd=T,cex=2,lwd=1.5)\n                             if(donanc2 == mainanc) points(ev2posb,i,pch=22,xpd=T,cex=2,lwd=1.5)\n                        }     \n                    }\n                }\n            }\n        }\n    \n        ## PLOT LEGEND \n        par(mar=c(1,1.5,2,0))\n        plot(0,0,axes=F,xlab=\"\",ylab=\"\",type=\"n\")\n        legend_text <- c(\"West African Niger-Congo\",\n                         \"Central West African Niger-Congo\",\n                         \"East African Niger-Congo\",\n                         \"South African Niger-Congo\",\n                         \"East African Nilo-Saharan\",\n                         \"East African Afroasiatic\",\n                         \"KhoeSan\",\n                         \"Eurasia\",\n                         \"main event ancestry\")\n        l <- legend(\"top\",legend=legend_text,pch=c(rep(15,8),22),\n                    col=c(pcolshex[c(1:3,6,4,5,7,8)],\"black\"),bty=\"n\",\n                    pt.bg=c(pcolshex[c(1:3,6,4,5,7,8)],\"white\"),\n                    ncol=1,xpd=T,pt.cex=3,x.intersp=1,y.intersp=1.25,\n                    pt.lwd=2,cex=1.25, title=\"Ancestry Region\")\n        par(mar=c(5,5,2,1))\n    \n        ## PLOT DATE COMPARISONS\n        ## USE ONLY THOSE POPULATIONS WHERE THE SAME EVENTS ARE INFERRED IN ALL THREE MAP ANALYSES ##\n        test <- malder_plot$Date.Gens>0 & malder_plot$N.evs>0 # malder_plot$Main.Anc.p<0.05\n        dates2plot <- malder_plot[test,]\n        matching_events <- c()\n        for(i in unique(dates2plot$EthnicGroup))\n        {\n            num_runs <- nrow(dates2plot[dates2plot$EthnicGroup==i,])\n            if(num_runs %in% c(3,6))\n            {\n                matching_events <- c(matching_events,i)\n            }\n        }    \n    \n        dates2plot <- dates2plot[dates2plot$EthnicGroup%in%matching_events,]    \n        tmp <- dates2plot[dates2plot$N.evs<2,]\n        dates2plot<- dates2plot[dates2plot$N.evs==2,]\n        for(i in unique(dates2plot$EthnicGroup))\n        {\n            for(j in unique(dates2plot$Rec.Map))\n            {\n                test <- dates2plot$EthnicGroup==i & dates2plot$Rec.Map == j\n                dates2plot[test,] <- dates2plot[test,][order(dates2plot$Date.Gens[test]),]    \n            }\n        }\n        dates2plot <- rbind(tmp,dates2plot)        \n        dates2plot <- dates2plot[order(dates2plot$EthnicGroup),]\n        dates2plot <- dates2plot[dates2plot$EthnicGroup!=\"MOSSI\",]\n    \n        xplot <- \"AfrMap\"\n        xplotlab <- \"YRI\"\n        yplot <- \"HAPMAP\"\n    \n        for(j in 1:2)\n        {\n            if(j == 1)\n            {\n                xplot <- \"CeuMap\"\n                xplotlab <- \"CEU\"\n            }\n            if(j == 2)\n            {\n                xplot <- \"AfrMap\"\n                xplotlab <- \"YRI\"\n            }\n            plot(0,0,\n                 xlab=paste(\"Date with\",xplotlab, \"genetic map (Hinch et al 2011)\"),\n                 ylab=\"Date with HAPMAP worldwide genetic map\",\n                 xlim=sapply(comp_ax,function(x)makeDate(x,add_BCE=F)),\n                 ylim=sapply(rev(comp_ax),function(x)makeDate(x,add_BCE=F)),\n                 yaxt=\"n\",type=\"n\",xaxt=\"n\")\n            xaxis <- c(2000,0,-2000,-4000,-10000)\n            xaxislabs <- c(\"2000\\nCE\",0,\"2000\\nBCE\",\"4000\\nBCE\",\"10000\\nBCE\")\n            axis(1,at=xaxis,labels=xaxislabs,tick=F,padj=0.5,line=0)\n            axis(2,at=xaxis,labels=xaxislabs,las=2,tick=F,hadj=0.5,line=0.25)\n            for(k in xaxis) abline(h=k,lty=2)\n            for(k in xaxis) abline(v=k,lty=2)\n            abline(a=0,b=1,lwd=2,col=\"red\")\n            mtext(3,line=0,text=LETTERS[j+1],adj=0,las=1,cex=1.5,lwd=3,xpd=T)\n        \n            plotx <- dates2plot$Rec.Map == xplot\n            ploty <- dates2plot$Rec.Map == yplot\n            plot_popsx <- dates2plot$EthnicGroup[plotx] \n            plot_popsy <- dates2plot$EthnicGroup[ploty]\n            plot_pops <- intersect(plot_popsx,plot_popsy)\n            plotx <- dates2plot$Rec.Map == xplot & dates2plot$EthnicGroup %in% plot_pops\n            ploty <- dates2plot$Rec.Map == yplot & dates2plot$EthnicGroup %in% plot_pops\n            \n            ## PLOT CIs\n            for(i in (1:sum(plotx)))\n            {\n                xs <- c(dates2plot$Date.Gens[plotx][i]+dates2plot$Date.Gens.CI[plotx][i],\n                        dates2plot$Date.Gens[plotx][i]-dates2plot$Date.Gens.CI[plotx][i])\n                ys <- c(dates2plot$Date.Gens[ploty][i],dates2plot$Date.Gens[ploty][i])\n                lines(sapply(xs,function(x)makeDate(x,add_BCE=F)),\n                      sapply(ys,function(x)makeDate(x,add_BCE=F)))\n                xs <- c(dates2plot$Date.Gens[plotx][i],dates2plot$Date.Gens[plotx][i])\n                ys <- c(dates2plot$Date.Gens[ploty][i]+dates2plot$Date.Gens.CI[ploty][i],\n                        dates2plot$Date.Gens[ploty][i]-dates2plot$Date.Gens.CI[ploty][i])\n                lines(sapply(xs,function(x)makeDate(x,add_BCE=F)),\n                      sapply(ys,function(x)makeDate(x,add_BCE=F)))\n            }\n            ## GET SYMBOLS, COLS, ETC FOR EACH POP AND PLOT\n            pop_pnts <- getPopSymbols(tidyNames(unique(dates2plot$EthnicGroup),fula=F),leginfo)\n            points(sapply(dates2plot$Date.Gens[plotx],function(x)makeDate(x,add_BCE=F)),\n                   sapply(dates2plot$Date.Gens[ploty],function(x)makeDate(x,add_BCE=F)),\n                   pch=as.numeric(pop_pnts$pch2plot),\n                   col=pop_pnts$rim2plot,\n                   bg=pop_pnts$col2plot)\n                   \n        }\n    dev.off()                \n}\n\n",
    "created" : 1453996568090.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "431172614",
    "id" : "FA084527",
    "lastKnownWriteTime" : 1454073403,
    "path" : "~/repos/popgen/plotting_scripts/plotMalderResults.R",
    "project_path" : "plotting_scripts/plotMalderResults.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}