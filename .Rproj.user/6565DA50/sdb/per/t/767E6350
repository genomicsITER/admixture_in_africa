{
    "contents" : "### SCRIPT TO PLOT GLOBETROTTER RESULTS FOR PAPER ###\nsetwd(\"~/repos/popgen/\")\n\n############################################################\n## SOURCE SOME USEFUL FUNCTIONS FROM copyselection PACKAGE ##\n## ~~~~~~~~~~~       !!! IN DEVELOPMENT !!!     ~~~~~~~~~~ ##\n############################################################\nmain_dir <- \"~/repos/\" ## where the code is kept\nsource(paste0(main_dir,\"popgen/packages_dev/functionWriter.R\"))\nlibrary(xtable)\nsetwd(paste0(main_dir,\"popgen/\"))\n###########################################################\n## DEFINE DATAFILES\npopkey_file <- \"data/MalariaGenAdmixturePopulationOverviewNSAA.txt\"\nleginfo_file <- \"data/MalariaGenAdmixturePopulationKey.txt\"\n## LOAD POPKEY FILE ##\npopkey <- read.table(popkey_file,header=T,as.is=T)\npopkey$Ethnic_Group <- toupper(popkey$Ethnic_Group)\npopkey$Ethnic_Group[popkey$Ethnic_Group==\"SEMI-BANTU\"] <- \"SEMI.BANTU\"\n## LOAD LEGEND INFO\nleginfo <- read.table(leginfo_file, header = T, comment.char = \"\")\n\n### DEFINE SOME PLOTTING VARIABLES ##\ndateLabelCex=1\ndatelines=c(-1000,-500,0,500,1000,1500)\nyAxisLim=c(-1000,2000)\n## OLD VERSION OF THE COLOURS\n#pcolshex <- c(\"#0000CD\", \"#03B4CC\", \"#A65628\", \"#FF7F00\", \"#984EA3\", \"#4DAF4A\", \"#CCCC00\")[c(1,2,4,5,3,6,7)]\n## NEW COLOURS THAT DIFFERENTIATE AA AND NS\npcolshex <- c(\"#0000CD\",\"#03B4CC\",\"#FF7F00\",\"#984EA3\",\"#FF69B4\",\"#A65628\",\"#4DAF4A\",\"#CCCC00\")\nancreg_list <- c(\"Western_Africa_Niger-Congo\",\"Central_West_Africa_Niger-Congo\",\n                 \"East_Africa_Niger-Congo\",\"East_Africa_Nilo-Saharan\",\"East_Africa_Afro-Asiatic\",\n                 \"South_Africa_Niger-Congo\",\"South_Africa_KhoeSan\",\"Eurasia\" )\npopplot <- scan(\"/mnt/kwiat/home/popgen/scripts/poplists/MalariaGen23EthnicGroups1KGSouthAfricaFinalAnalysisPopsSSAonlyOrder.txt\",what=\"char\")\npopplot <- popplot[popplot!=\"SEMI-BANTU\"]\npopplotorder <- popplot\npopplot <- factor(popplot,levels=popplotorder)\n\n## PULL IN DATA\nadmixturesources2 <- read.table(\"data/MalariaGenGlobetrotterAdmixtureSources3.txt\",\n                                header=T,row.names=1,as.is=T)\nfinal.res2plot <- read.table(\"data/MalariaGenGlobetrotter2plotFinal.txt\",header=T,row.names=1,as.is=T)\nadmixturesources2 <- admixturesources2[,levels(popplot)]\ndateboots <- read.table(\"data/MalariaGenGlobetrotterOneDateBootstraps.txt\",header=T,row.names=1,as.is=T)\ndate2boots <- read.table(\"data/MalariaGenGlobetrotterTwoDateBootstraps.txt\",header=T,row.names=1,as.is=T)\nbest_ald <- read.table(\"data/MalariaGenBestAlder.txt\",header=T,as.is=T,comment.char=\"\",fill=T)\n\n## reorder admixturesources2 columns\n##neworder <- colnames(admixturesources2)[c(1:26,38:41,27:37,42:60)]\n##admixturesources2 <- admixturesources2[,neworder]\n\n## DEFINE THE REGION AND COLOURS FOR EACH OF THE DIFFERENT SOURCES\nsrcreg <- getPopRegion(tidyNames(colnames(admixturesources2),fula=T),popkey)\nregions <- as.character(ancreg_list)\nsrcreg[tidyNames(colnames(admixturesources2),fula=T) == \"KARRETJIE\"] <- \"South_Africa_KhoeSan\"\nsrcreg <- factor(srcreg,levels=regions)\nsrccols <- pcolshex[srcreg]\nsrccols <- as.vector(srccols)\nsrccols[srccols==\"black\"] <- \"grey\"\n\n###########################################################\n## SORT OUT RESULTS TO PLOT\npltable <- final.res2plot\npltable <- pltable[!pltable$Result%in%c(\"U\",\"NA\"),]\npltable$Result[pltable$Result==\"1D(2D)\"] <- \"1D\"\npltable$Result[pltable$Result==\"1MW(2D)\"] <- \"1MW\"\n\nnores <- popplot[!popplot%in%pltable$Cluster]\nnoprop <- FALSE ## USE ACTUAL PROPORTIONS IN SOURCE BAR CHARTS?\n\n## TO MAKE SIMILAR SOURCES ALIGN IN THE FIGURE BELOW, WE MIGHT SOMETIMES\n## WANT TO DEFINE THE MAJOR SOURCE AS THE ONE THAT CONTRIBUTES THE \n## LEAST TO AN EVENT. rev_pops ALLOWS US TO REVERSE WHICH IS THE MAJOR\n## AND WHICH IS THE MINOR SOURCE IN THE OUTPUT TABLE\nrev_pops <- c(\"KHWE\",\"AMAXHOSA\",\"SEBANTU\")\n#rev_pops <- c()\npops <- as.character(pltable$Cluster)\n## I'VE ADDED A FUNCTION TO PULL THESE THINGS OUT\ntempresults <- addGTresults(pltable,rev_pops)\nall_dates <- tempresults[[1]]\nall_plot_mat <- tempresults[[2]]\nall_src_mat <- tempresults[[3]]\ndboots <- tempresults[[4]]\nallsources <- tempresults[[5]]\n\n\n##################################################################################\n## LOAD INDIVIDUAL CLUSTER ASSIGNMENT:: NEEDS SERVER ACCESS\nfinal_clusts <- vector(\"list\",length(popplot))\nfor(i in 1:length(popplot))\n{\n    ii <- as.character(popplot[i])\n    names(final_clusts)[i] <- ii\n    if(ii ==\"SEMI.BANTU\") ii <- \"SEMI-BANTU\"\n    iinds <- scan(paste0(\"/mnt/kwiat/home/popgen/scripts/finalpoplists/\",ii,\"finalinds.txt\"),what=\"char\")\n    final_clusts[[i]] <- iinds\n}\npaintedinds <- read.table(\"/mnt/kwiat/data/bayes/users/george/popgen/analysis3/chromopainter/samplelists/MalariaGen23EthnicGroups1KGSouthAfricaNoAmericaFinalCP.inds\",sep=\" \")\n\n## CHANGE ACTUAL SAMPLE IDS TO CP LABELS\nfinal_clusts2<- lapply(final_clusts,function(x){as.character(paintedinds[match(unlist(x),paintedinds[,2]),1])})\n\n##################################################################################\n\n## ORDER GROUPS BY THE NORMAL POPKEY ORDER\nroword <- rownames(all_dates)\nroword <- as.character(sapply(roword,function(x){gsub(\"\\\\_a\",\"\",x)}))\nroword <- factor(roword,levels=popkey$Ethnic_Group)\nroword <- order(roword)\nall_dates <- all_dates[roword,]\n\n## MAKE SOME NICE REGION LABELS\nregions2 <- c(\"Western NC\",\"Central West NC\",\"Southern NC\",\n              \"Eastern NC\", \"Eastern NS\",\"Eastern AA\", \"Southern KS\",\n              \"Eurasia\")\nregions2 <- toupper(regions2)\n##################################################################################\n## GENERATE A MATRIX OF SRC COPYING VECTORS, FOR ALL EVENTS,    \n## WE'LL SELECT WHICH TO PLOT LATER \nall_src_mat <- matrix(0,ncol=length(popkey$Ethnic_Group),nrow=0)\nall_predmat <- matrix(0,ncol=length(popkey$Ethnic_Group),nrow=length(popkey$Ethnic_Group))\nrownames(all_predmat) <- colnames(all_predmat) <- colnames(all_src_mat) <- colnames(admixturesources2)\nfor(i in 1:ncol(all_plot_mat))\n{\n    pop <- colnames(all_plot_mat)[i]\n    pop1 <- gsub(\"\\\\_a\",\"\",pop)\n    reg <- as.character(popkey$RegionM[popkey$Ethnic_Group==pop1])\n    if(reg == \"East_Africa_Afro-Asiatic\") reg <- \"East_Africa_Nilo-Saharan\"\n    predmat <- read.table(paste0(\"/mnt/kwiat/data/bayes/users/george/popgen/analysis3/globetrotter/input/\",\n                                 \"MalariaGen23EthnicGroups1KGSouthAfricaNoAmericaFinal\",reg,\".chunklengths.out\"),\n                          header=T,row.names=1)\n    predmat <- rowsAsMapClusts(final_clusts2,predmat,mean)\n    predmat <- predmat/rowSums(predmat)\n    rownames(predmat) <- gsub(\"\\\\-\",\"\\\\.\",rownames(predmat))\n    s1 <- unlist(all_plot_mat[1:60,i])\n    s2 <- unlist(all_plot_mat[62:121,i])\n    names(s1) <- names(s2) <- colnames(admixturesources2)\n    cv1 <- apply(predmat[names(s1),]*s1,2,sum)\n    cv2 <- apply(predmat[names(s2),]*s2,2,sum)\n    add <- colnames(all_src_mat)[!colnames(all_src_mat)%in%names(cv1)]\n    cv1 <- c(cv1,rep(0,length(add)))\n    names(cv1)[names(cv1)==\"\"] <- add\n    cv1 <- cv1[colnames(all_src_mat)]\n    all_src_mat <- rbind(all_src_mat,cv1)\n    rownames(all_src_mat)[nrow(all_src_mat)] <- paste(pop,\"minor\",sep=\"_\")\n    cv2 <- c(cv2,rep(0,length(add)))\n    names(cv2)[names(cv2)==\"\"] <- add\n    cv2 <- cv2[colnames(all_src_mat)]\n    all_src_mat <- rbind(all_src_mat,cv2)\n    rownames(all_src_mat)[nrow(all_src_mat)] <- paste(pop,\"major\",sep=\"_\")\n    if(length(strsplit(pop,split=\"\\\\_\")[[1]]) == 1)\n    {\n        if(sum(all_predmat[pop,])==0 )\n        {\n            tp <- predmat[pop,]\n            add <- colnames(all_predmat)[!colnames(all_predmat)%in%names(tp)]\n            tp <- c(tp,rep(0,length(add)))\n            names(tp)[names(tp)==\"\"] <- add\n            all_predmat[pop,] <- tp[colnames(all_predmat)]\n        }\n    }\n}\n\n##################################################################################\n## PULL IN THE RESULTS OF THE MIXTURE MODEL (RUN ELSEWHERE)\nmixmat <- read.table(\"data/Malgen23EthnicGroups1KGNoAmericaFinalAnalysisNonLocalNNLS.txt\",header=T,row.names=1,as.is=T)\n## EDIT POPKEY TO GIVE A BRAND NEW COLOUR TO THE FULANI\npopkey$RegionM[popkey$Ethnic_Group == \"FULAI\"] <- \"Fulani\"\npopkey$RegionM[popkey$Ethnic_Group == \"SEMI.BANTU\"] <- \"Semi\"\n##popkey$RegionM[popkey$Ethnic_Group == \"ANUAK\"] <- \"Anuak\"\nancreg_list <- c(ancreg_list,\"Fulani\",\"Semi\")\npcolshex <- c(pcolshex,\"gold4\",\"#FF001E\")\n## reorder the lists\nneword <- c(1,9,2,10,3,4,5,6,7,8)\nancreg_list <- ancreg_list[neword]\npcolshex <- pcolshex[neword]\n##################################################################################\n## PLOT\npdf(\"figures/GLOBETROTTERresultsFINAL.pdf\",height=9,width=9)\nlayout(matrix(c(1,1,1,2,2,2,3,3,3,4,4,4,5,6,7),3,5),\n       widths=c(4,0.75,0.75,0.75,2.75),heights=c(3,3,3))\ntopmar <- 4\nn_pops <- 48\n\n### below for gambia only plot\n# pdf(\"figures/GLOBETROTTERresultsGAMBIA.pdf\",height=4,width=9)\n# layout(matrix(c(1,1,1,2,2,2,3,3,3,4,4,4,5,6,7),3,5),\n#        widths=c(4,0.75,0.75,0.75,2.75),heights=c(3,0,0))\n#     topmar <- 8\n#     n_pops <- 12\n\npar(mar=c(4,12,topmar,0.5))\nd_pops <- gsub(\"\\\\_a\",\"\",rownames(all_dates))\nx_labs3 <- c(2000,1000,0,-1000,-2000,-3000)\nx_labs3char <- c(\"2000\\nCE\",\"1000\\nCE\",0,\"1000\\nBCE\",\"2000\\nBCE\",\"3000\\nBCE\")\nx_max <- min(x_labs3)\n\npoplabpos <- 4600\nev1pos1 <- 4100\nev1pos2 <- 3600\nev2pos1 <- 3100\nev2pos2 <- 2600\n\npoplabpos <- 3900\nev1pos1 <- 3800\nev1pos2 <- 3500\nev2pos1 <- 3000\nev2pos2 <- 2700\n\n\n## EMPTY PLOT FOR DATES\nplot(0,0,xlim=rev(range(x_labs3)),\n     ylim=c(n_pops,1),type=\"n\",axes=F,xlab=\"\",ylab=\"\")\ntext(poplabpos+1000,-1,labels=LETTERS[1],adj=0,las=1,cex=2,lwd=3,xpd=T)\naxis(1,at=x_labs3,labels=x_labs3char,cex.axis=1,tick=F,padj=0.5)\nfor(j in x_labs3) abline(v=j,lty=2)\nmtext(\"Date of Admixture\",1,line=3)\n## ADD DATE IN GENERATIONS?\n#x_labs4 <- c(100,150,300,400)\n#x_at4 <- sapply(x_labs4,makeDate1)\n#for(i in 1:length(x_labs4))\n#  text(y=-1,x=x_at4[i],labels=paste(x_labs4[i],\"gens\"),xpd=T,srt=35,adj=0,cex=1)\n#for(j in sapply(x_labs4,makeDate1)) abline(v=j,lty=3)\n\n## DO WE WANT TO CHANGE THE ORDERING? \n## EDIT THIS IN SOME WAY TO CHANGE THE ORDER \ndpopsorder <- order(factor(d_pops,levels(popplot)))\ndpops <- d_pops[dpopsorder]\nall_dates <- all_dates[dpopsorder,]\nall_plot_mat <- all_plot_mat[,dpopsorder]\n\n###################################################################\n## PLOT DATES AND EVENT SOURCE ANCESTRY\n## RUN THE CODE TWICE, THE FIRST TIME GETS THE ORDERING AND THE \n## SECOND TIME ACTUALLY PLOTS THE DATA\nfor(run in 1:2)\n{\n    if(run == 1)\n    {\n        poporder <- as.character(popplot[1:48])\n        popordertab <- c()\n    }\n    if(run == 2)\n    {\n        poporder <- popordertab[,1]\n        ## ALTER TO MOVE MALAWI DOWN LIST\n        poporder <- poporder[!poporder%in%c(\"MALAWI\",\"SWBANTU\")]\n        where <- which(poporder==\"KHOMANI\")\n        if(length(where) > 0)\n        {\n            poporder <- c(poporder[1:where],\"MALAWI\",\"SWBANTU\",poporder[(where+1):length(poporder)])\n        }\n        #missing_pops <- popplot[1:48]\n        #missing_pops <- as.character(missing_pops[!missing_pops%in%poporder])\n        #poporder <- c(poporder,missing_pops)\n        poporder <- poporder[1:n_pops]\n    }\n    \n    for(i in 1:nrow(all_dates))\n#     gampops <- c(\"JOLA\",\"FULA\",\"MANDINKA\",\"WOLLOF\",\"MANJAGO\",\"SERERE\",\"SEREHULE\",\"MALINKE\",\"BAMBARA\",\"YORUBA\")\n#     for(i in (1:nrow(all_dates))[tidyNames(gsub(\"_a\",\"\",rownames(all_dates)),fula=F)%in%gampops])\n    {\n        pop <- rownames(all_dates)[i]\n        poppos <- (1:length(poporder))[poporder%in%gsub(\"\\\\_a\",\"\",pop)]\n        res <- all_dates[pop,5]\n        d <- as.numeric(all_dates[pop,1])\n        dh <- as.numeric(all_dates[pop,3])\n        dl <- as.numeric(all_dates[pop,2])\n        prop <- as.numeric(all_dates[pop,4])\n        #if(pop == \"ARI\") d <- -d ## not sure why this wasn't reversed before\n        if(run == 2) points(d,poppos,pch=20, cex=2)\n        #if(run == 2) lines(x=c(dl,dh),y=c(poppos,poppos))\n        if(run == 2)\n        {\n            if(!is.na(dl) & dl > x_labs3[length(x_labs3)])\n            {\n                arrows(dl,poppos,dh,poppos,code=3,length=0.025,angle=90)\n            } else\n            {\n                arrows(dl,poppos,dh,poppos,code=3,length=0.025,angle=90)\n                dl <- x_labs3[length(x_labs3)]\n                xrange <- range(x_labs3)[2]-range(x_labs3)[1]\n                dl <- dl - 0.04*xrange\n                arrows(dl,poppos,dh,poppos,code=1,length=0.025,angle=45)\n            }\n        }\n        if(res %in% c(\"1D\",\"1MW\"))\n        {\n            pop2 <- gsub(\"\\\\_a\",\"\",pop)\n            anc1 <- pltable[pltable$Cluster==pop2,\"best.source1\"]\n            anc2 <- pltable[pltable$Cluster==pop2,\"best.source2\"]\n            if(run == 1 & pop2 %in% rev_pops)\n            {\n                addancs <- c(pop,anc2,anc1,dh)\n            } else if(run == 1)\n            {\n                addancs <- c(pop,anc1,anc2,dh)\n            }\n            if(run == 1) popordertab <- rbind(popordertab,addancs)\n            \n            if(run == 2 & pop %in% rev_pops)\n            {\n                anc1 <- pltable[pltable$Cluster==pop2,\"best.source2\"]\n                anc2 <- pltable[pltable$Cluster==pop2,\"best.source1\"]\n            }\n            anc3 <- pltable[pltable$Cluster==pop2,\"best.source1.ev2\"]\n            anc4 <- pltable[pltable$Cluster==pop2,\"best.source2.ev2\"]\n            pcol1 <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==anc1])]\n            pcol2 <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==anc2])]\n            pcol3 <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==anc3])]\n            pcol4 <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==anc4])]\n            if(run == 2)\n            {\n                if(pop%in%rev_pops)\n                {\n                    points(ev1pos1,poppos,pch=15,col=pcol1,xpd=T,cex=2)\n                    points(ev1pos2,poppos,pch=15,col=pcol2,xpd=T,cex=2)\n                    points(ev1pos1,poppos,pch=22,xpd=T,cex=2,lwd=1.5)\n                } else if(length(strsplit(pop, split=\"\\\\_\")[[1]]) == 1 )\n                {\n                    points(ev1pos1,poppos,pch=15,col=pcol1,xpd=T,cex=2)\n                    points(ev1pos2,poppos,pch=15,col=pcol2,xpd=T,cex=2)\n                    points(ev1pos2,poppos,pch=22,xpd=T,cex=2,lwd=1.5)\n                }\n            }\n            if(res == \"1MW\")\n            {\n                if(run == 2) points(ev2pos1,poppos,pch=15,col=pcol3,xpd=T,cex=2)\n                if(run == 2) points(ev2pos2,poppos,pch=15,col=pcol4,xpd=T,cex=2)\n                if(run == 2) points(ev2pos2,poppos,pch=22,xpd=T,cex=2,lwd=1.5)\n            } \n        }\n        if(res %in% c(\"2D\"))\n        {\n            pop2 <- gsub(\"\\\\_a\",\"\",pop)\n            anc1 <- pltable[pltable$Cluster==pop2,\"best.source1.date1\"]\n            anc2 <- pltable[pltable$Cluster==pop2,\"best.source2.date1\"]\n            if(pop2 %in% rev_pops)\n            {\n                addancs <- c(pop,anc2,anc1,dh)\n            } else if(run == 1)\n            {\n                addancs <- c(pop,anc1,anc2,dh)\n            }\n            if(run == 1) popordertab <- rbind(popordertab,addancs)\n            if(run == 2 & pop %in% rev_pops)\n            {\n                anc1 <- pltable[pltable$Cluster==pop2,\"best.source2\"]\n                anc2 <- pltable[pltable$Cluster==pop2,\"best.source1\"]\n            }\n            anc3 <- pltable[pltable$Cluster==pop2,\"best.source1.date2\"]\n            anc4 <- pltable[pltable$Cluster==pop2,\"best.source2.date2\"]\n            pcol1 <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==anc1])]\n            pcol2 <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==anc2])]\n            pcol3 <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==anc3])]\n            pcol4 <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==anc4])]\n            if(run == 2) points(ev1pos1,poppos,pch=15,col=pcol1,xpd=T,cex=2)\n            if(run == 2) points(ev1pos2,poppos,pch=15,col=pcol2,xpd=T,cex=2)\n            if(run == 2)\n            { \n                if(pop%in%rev_pops & length(strsplit(pop, split=\"\\\\_\")[[1]]) != 2)\n                {\n                    points(ev1pos1,poppos,pch=15,col=pcol1,xpd=T,cex=2)\n                    points(ev1pos2,poppos,pch=15,col=pcol2,xpd=T,cex=2)\n                    points(ev1pos1,poppos,pch=22,xpd=T,cex=2,lwd=1.5)\n                    points(ev2pos1,poppos,pch=15,col=pcol3,xpd=T,cex=2)\n                    points(ev2pos2,poppos,pch=15,col=pcol4,xpd=T,cex=2)\n                    points(ev2pos2,poppos,pch=22,xpd=T,cex=2,lwd=1.5)\n                } else if(length(strsplit(pop, split=\"\\\\_\")[[1]]) != 1)\n                {\n                    points(ev1pos1,poppos,pch=15,col=pcol1,xpd=T,cex=2)\n                    points(ev1pos2,poppos,pch=15,col=pcol2,xpd=T,cex=2)\n                    points(ev1pos2,poppos,pch=22,xpd=T,cex=2,lwd=1.5)\n                    points(ev2pos1,poppos,pch=15,col=pcol3,xpd=T,cex=2)\n                    points(ev2pos2,poppos,pch=15,col=pcol4,xpd=T,cex=2)\n                    points(ev2pos2,poppos,pch=22,xpd=T,cex=2,lwd=1.5)\n                }\n            }\n        }\n    }\n    if(run == 1)\n    {\n        popordertab <- popordertab[grep(\"_a\",popordertab[,1],invert = T),]\n        popordertab <- cbind(popordertab,\n                             as.character(sapply(popordertab[,2],function(x){\n                                 popkey$RegionM[popkey$Ethnic_Group==x]})))\n        popordertab <- cbind(popordertab,\n                             as.character(sapply(popordertab[,3],function(x){\n                                 popkey$RegionM[popkey$Ethnic_Group==x]})))\n        popordertab[,5] <- factor(popordertab[,5],levels=ancreg_list)\n        popordertab[,6] <- factor(popordertab[,6],levels=ancreg_list)\n        popordertab <- popordertab[order(popordertab[,6],popordertab[,5],\n                                         round((1950-as.numeric(popordertab[,4]))/29)),]\n    }\n}\n\n###################################################################\n## PLOT Y-AXIS NAMES AND COLOURS\ny_ax_cols <- c()\nfor(i in poporder) \n{\n    if(i==\"SEMI-BANTU\") i <- \"SEMI.BANTU\"\n    ii <- pcolshex[ancreg_list==as.character(popkey$RegionM[popkey$Ethnic_Group==i])]\n    y_ax_cols <- c(y_ax_cols,ii)\n}\nfor(i in 1:n_pops)\n{\n    axis(2,pos=poplabpos,at=i,labels=tidyNames(poporder[i],fula=T,khoesan=T,tig=T),\n         col.axis=y_ax_cols[i],las=2,tck=0,lwd=0,line=-0.5)\n}\nfor(i in seq(0.5,(n_pops+1),1)) abline(h=i,lty=3,lwd=0.5)\nlines(x=c(median(c(ev1pos2,ev2pos1)),median(c(ev1pos2,ev2pos1))),y=c(0,n_pops+1),lwd=1,xpd=T)\n\ntext(y=-1,x=median(c(ev1pos1,ev1pos2)),labels=\"1ST EVENT\",xpd=T,srt=35,adj=0)\ntext(y=-1,x=median(c(ev2pos1,ev2pos2)),labels=\"2ND EVENT\",xpd=T,srt=35,adj=0)\n\n###################################################################\n## PLOT NNLS MIXTURE MODEL\nx1 <- mixmat[poporder[1:n_pops],colnames(admixturesources2)]\nbp <- barplot(t(as.matrix(x1)),\n              yaxt=\"n\",xlab=\"\",beside=F,\n              main=\"\",cex.main=0.75,border=NA,horiz=T,\n              col=srccols,xaxt=\"n\",add=F,plot=F)\npar(mar=c(4,0,topmar,0.5))\nplot(0,0,xlim=c(0,1),\n     ylim=c(bp[length(bp)],bp[1]),type=\"n\",axes=F,xlab=\"\",ylab=\"\")\nbp <- barplot(t(as.matrix(x1)),\n              yaxt=\"n\",xlab=\"\",beside=F,\n              main=\"\",cex.main=0.75,border=NA,horiz=T,\n              col=srccols,xaxt=\"n\",add=T,plot=T)\n#text(0,-1,labels=LETTERS[2],adj=0,las=1,cex=2,lwd=3,xpd=T)\ntext(y=-1,x=0.2,labels=\"MIXTURE\\nMODEL\",xpd=T,srt=35,adj=0)\n###################################################################\n## PLOT ADMIXTURE SOURCES\n## FIRST EVENTS\nplot_mat <- matrix(0,nrow=nrow(all_plot_mat),ncol=length(poporder))\ncolnames(plot_mat) <- as.character(poporder)\nfor(i in 1:ncol(plot_mat))\n{\n    pop2 <- as.character(poporder[i])\n    if(pop2 %in% colnames(all_plot_mat)) plot_mat[,pop2] <- unlist(all_plot_mat[,pop2])\n}\npar(mar=c(4,0,topmar,1))\nplot(0,0,xlim=c(0,1),\n     ylim=c(bp[length(bp)],bp[1]),type=\"n\",axes=F,xlab=\"\",ylab=\"\")\nbarplot(plot_mat[,1:n_pops],col=c(srccols,\"white\",srccols),\n        yaxt=\"n\",xlab=\"\",beside=F,\n        main=\"\",cex.main=0.75,border=NA,horiz=T,\n        xaxt=\"n\",add=T)\ntext(y=-1,x=0.2,labels=\"1ST EVENT\\nSOURCES\",xpd=T,srt=35,adj=0)\n## SECOND EVENTS\nplot_mat <- matrix(0,nrow=nrow(all_plot_mat),ncol=length(poporder))\ncolnames(plot_mat) <- poporder\nfor(i in 1:ncol(plot_mat))\n{\n    pop2 <- paste0(poporder[i],\"_a\")\n    if(pop2 %in% colnames(all_plot_mat)) plot_mat[,i] <- unlist(all_plot_mat[,pop2])\n}\npar(mar=c(4,0,topmar,1))\nplot(0,0,xlim=c(0,1),\n     ylim=c(bp[length(bp)],bp[1]),type=\"n\",axes=F,xlab=\"\",ylab=\"\")\nbarplot(plot_mat[,1:n_pops],col=c(srccols,\"white\",srccols),\n        yaxt=\"n\",xlab=\"\",beside=F,\n        main=\"\",cex.main=0.75,border=NA,horiz=T,\n        xaxt=\"n\",add=T)\ntext(y=-1,x=0.2,labels=\"2ND EVENT\\nSOURCES\",xpd=T,srt=35,adj=0)\n\n###################################################################\n## LEGEND\npar(mar=c(1,1.5,4,0))\nplot(0,0,axes=F,xlab=\"\",ylab=\"\",type=\"n\")\nlegend_text <- c(\"West African Niger-Congo\",\n                 \"Central West African Niger-Congo\",\n                 \"East African Niger-Congo\",\n                 \"South African Niger-Congo\",\n                 \"East African Nilo-Saharan\",\n                 \"East African Afroasiatic\",\n                 \"KhoeSan\",\n                 \"Eurasia\")\nl <- legend(\"top\",legend=c(legend_text,\"main event ancestry\"),\n            pch=c(rep(15,8),22),\n            col=c(pcolshex[c(1,3,5,8,6,7,9,10)],\"black\"),bty=\"n\",\n            ncol=1,xpd=T,pt.cex=3,x.intersp=1,y.intersp=1.25,\n            pt.lwd=2,cex=1.25, title=\"Ancestry Region\")\npar(mar=c(5,5,2,1))\n\n###################################################################\n### MALDER AND GLOBETROTTER COMPARISONS\nmaldata <- read.table(\"data/AllPopsMalderFinalALL.txt\",header=T,as.is=T)\nmaldata <- maldata[maldata$Rec.Map==\"HAPMAP\",]\nmaldata$Date.Gens[maldata$N.evs==0] <- 0\nmaldata$Date.Gens.CI[maldata$N.evs==0] <- 0\nmaldata$Date.Gens[maldata$Main.Anc.p>0.05] <- 0\nmaldata$Date.Gens[maldata$Main.Anc.p>0.05] <- 0\n\ngtdata <- read.csv(\"data/AfricaGlobetrotterFinalResults.csv\",header=T)\ngtdata <- gtdata[grep(\"null\",gtdata$Analysis,invert=T),]\ngtdata$Result[is.na(gtdata$Result)] <- \"1D\"\n## MAKE A TABLE OF GLOBETROTTER DATES\ngtres <- c()\nfor(i in 1:nrow(gtdata))\n{\n    pop <- as.character(gtdata$Cluster[i])\n    res <- gtdata$Result[i]\n    if(res %in% c(\"1D\",\"1MW\",\"U\"))\n    {\n        date <- gtdata$date.1D[i]\n        gtres <- rbind(gtres,c(pop,round(date)))\n    } else \n    {\n        date1 <- gtdata$date.2D.1[i]\n        date2 <- gtdata$date.2D.2[i]\n        gtres <- rbind(gtres,c(pop,round(date1)),c(pop,round(date2)))\n    }\n}\n\ngtres <- gtres[order(gtres[,1],as.numeric(gtres[,2])),]\ncolnames(gtres) <- c(\"pop\",\"gtdate\")\ngtres[,2] <- as.numeric(gtres[,2])\n\n## COMBINE WITH INFERENCE FROM MALDER\ndatecomps <- c()\nfor(i in unique(gtres[,\"pop\"]))\n{\n    maldate <- sort(maldata$Date.Gens[maldata$EthnicGroup==i])\n    \n    if(length(maldate)==1 & maldate > 0)\n    {\n        gtdate <- gtdata$date.1D[gtdata$Cluster==i]\n        gtdatel <- gtdata$date.1D.L[gtdata$Cluster==i]\n        gtdateh <- gtdata$date.1D.H[gtdata$Cluster==i]  \n        maldateci <- sort(maldata$Date.Gens.CI[maldata$EthnicGroup==i]) \n        maldatel <- maldate - maldateci\n        maldateh <- maldate + maldateci\n        datecomps <- rbind(datecomps,c(i,maldate,maldatel,maldateh,\n                                       round(gtdate),round(gtdatel),round(gtdateh)))\n    }\n    \n    if(length(maldate)==2)\n    {\n        gtdate <- sort(c(gtdata$date.2D.1[gtdata$Cluster==i],\n                         gtdata$date.2D.2[gtdata$Cluster==i]))\n        gtdatel <- sort(c(gtdata$date.2D.1.L[gtdata$Cluster==i],\n                          gtdata$date.2D.2.L[gtdata$Cluster==i]))\n        gtdateh <- sort(c(gtdata$date.2D.1.H[gtdata$Cluster==i],\n                          gtdata$date.2D.2.H[gtdata$Cluster==i]))\n        maldateci <- sort(maldata$Date.Gens.CI[maldata$EthnicGroup==i]) \n        maldatel <- c(maldate[1] - maldateci[1],maldate[2] - maldateci[2])\n        maldateh <- c(maldate[1] + maldateci[1],maldate[2] + maldateci[2])\n        \n        \n        datecomps <- rbind(datecomps,c(i,maldate[1],maldatel[1],maldateh[1],\n                                       round(gtdate[1]),round(gtdatel[1]),round(gtdateh[1])))\n        datecomps <- rbind(datecomps,c(i,maldate[2],maldatel[2],maldateh[2],\n                                       round(gtdate[2]),round(gtdatel[2]),round(gtdateh[2])))\n        \n    }\n}\n\ncolnames(datecomps) <- c(\"pop\",\"maldate\",\"maldatel\",\"maldateh\",\"gtdate\",\"gtdatel\",\"gtdateh\")\ndatecomps <- data.frame(datecomps)\n\npnts <- getPopSymbols(tidyNames(datecomps$pop,fula=F),leginfo)\npointpch <-  pnts$pch2plot\npointcol <- pnts$col2plot\npointrim <- pnts$rim2plot\naxmax <- max(sapply(apply(datecomps[,2:3],1,as.character),as.numeric))\nplot(sapply(as.numeric(as.character(datecomps$gtdate)),makeDate,add_BCE=F),\n     sapply(as.numeric(as.character(datecomps$maldate)),makeDate,add_BCE=F),\n     xlim=sapply(c(0,240),makeDate,add_BCE=F),\n     ylim=sapply(c(240,0),makeDate,add_BCE=F),\n     ylab=\"Date inferred by MALDER\",xlab=\"Date inferred by GLOBETROTTER\",\n     type=\"n\",axes=F,main=\"\")\nabline(a=0,b=1,lwd=2,col=\"red\")\nx_labs3 <- c(2000,0,-2000,-5000,-10000)\nx_labs3char <- c(\"2000\\nCE\",0,\"2000\\nBCE\",\"5000\\nBCE\",\"10000\\nBCE\")\naxis(1,at=x_labs3,labels=x_labs3char,cex.axis=1,tick=F,padj=0.5)\naxis(2,at=x_labs3,labels=x_labs3char,cex.axis=1,tick=F,padj=0.5,las=2)\nfor(j in x_labs3) abline(v=j,lty=2)\nfor(j in x_labs3) abline(h=j,lty=2)\nbox()\nmtext(3,line=0,text=LETTERS[2],adj=0,las=1,cex=1.5,lwd=3,xpd=T)\nmtext(3,line=0,text=\"Number of events inferred\\nby MALDER\",adj=0.5,las=1,cex=0.5,lwd=1,xpd=T)\n\n## ADD CONFIDENCE INTERVALS\nfor(i in 1:nrow(datecomps))\n{\n    xs <- c(as.numeric(as.character(datecomps[i,\"gtdatel\"])),\n            as.numeric(as.character(datecomps[i,\"gtdateh\"])))\n    ys <- c(as.numeric(as.character(datecomps[i,\"maldate\"])),\n            as.numeric(as.character(datecomps[i,\"maldate\"])))\n    lines(sapply(xs,makeDate,add_BCE=F),\n          sapply(ys,makeDate,add_BCE=F))\n    xs <- c(as.numeric(as.character(datecomps[i,\"gtdate\"])),\n            as.numeric(as.character(datecomps[i,\"gtdate\"])))\n    ys <- c(as.numeric(as.character(datecomps[i,\"maldatel\"])),\n            as.numeric(as.character(datecomps[i,\"maldateh\"])))\n    lines(sapply(xs,makeDate,add_BCE=F),\n          sapply(ys,makeDate,add_BCE=F))\n    \n}\n## ADD POINTS\npoints(sapply(as.numeric(as.character(datecomps$gtdate)),makeDate,add_BCE=F),\n       sapply(as.numeric(as.character(datecomps$maldate)),makeDate,add_BCE=F),\n       pch=as.numeric(pointpch),\n       col=pointrim,bg=pointcol,cex=1,lwd=1)\n###################################################################\n## COMPARISONS OF DATES WITH GLOBETROTTER INFERENCE ##\n\n#??????best_ald ??????\ndatecomps2 <- c()\nfor(i in unique(gtres[,\"pop\"]))\n{\n    maldate <- sort(maldata$Date.Gens[maldata$EthnicGroup==i])\n    numevents <- sum(gtres[,\"pop\"]==i)\n    \n    if(numevents == 2 & length(maldate) == 2)\n    {\n        gtdate <- sort(c(gtdata$date.2D.1[gtdata$Cluster==i],\n                         gtdata$date.2D.2[gtdata$Cluster==i]))\n        gtdatel <- sort(c(gtdata$date.2D.1.L[gtdata$Cluster==i],\n                          gtdata$date.2D.2.L[gtdata$Cluster==i]))\n        gtdateh <- sort(c(gtdata$date.2D.1.H[gtdata$Cluster==i],\n                          gtdata$date.2D.2.H[gtdata$Cluster==i]))\n        \n        maldateci <- sort(maldata$Date.Gens.CI[maldata$EthnicGroup==i]) \n        maldatel <- maldate - maldateci\n        maldateh <- maldate + maldateci\n        \n        datecomps2 <- rbind(datecomps2,c(i,maldate[1],maldatel[1],maldateh[1],\n                                         round(gtdate[1]),round(gtdatel[1]),round(gtdateh[1])))\n        datecomps2 <- rbind(datecomps2,c(i,maldate[2],maldatel[2],maldateh[2],\n                                         round(gtdate[2]),round(gtdatel[2]),round(gtdateh[2])))\n    }\n    if(numevents == 2 & length(maldate) == 1)\n    {\n        gtdate <- c(gtdata$date.1D[gtdata$Cluster==i])\n        gtdatel <- c(gtdata$date.1D.L[gtdata$Cluster==i])\n        gtdateh <- c(gtdata$date.1D.H[gtdata$Cluster==i])\n        maldateci <- sort(maldata$Date.Gens.CI[maldata$EthnicGroup==i]) \n        maldatel <- maldate - maldateci\n        maldateh <- maldate + maldateci\n        datecomps2 <- rbind(datecomps2,c(i,maldate,maldatel,maldateh,\n                                         round(gtdate[1]),round(gtdatel[1]),round(gtdateh[1])))\n    }\n    if(numevents == 1 & length(maldate) == 2)\n    {\n        gtdate <- c(gtdata$date.1D[gtdata$Cluster==i])\n        gtdatel <- c(gtdata$date.1D.L[gtdata$Cluster==i])\n        gtdateh <- c(gtdata$date.1D.H[gtdata$Cluster==i])\n        aldate <- as.character(best_ald$Date.Gens[best_ald$adm.pop==gsub(\"\\\\=\",\"\",tidyNames(i))])\n        if(aldate != \"\")\n        {\n            aldate1 <- round(as.numeric(strsplit(aldate,split=\" \")[[1]][1]))\n            aldateci <- round(as.numeric(strsplit(aldate,split=\" \")[[1]][3]))\n            aldate <- aldate1\n            aldatel <- aldate - aldateci\n            aldateh <- aldate + aldateci\n            datecomps2 <- rbind(datecomps2,c(i,aldate,aldatel,aldateh,\n                                             round(gtdate),round(gtdatel),round(gtdateh)))\n        }  \n    }\n    if(numevents == 1 & length(maldate) == 1)\n    {\n        gtdate <- c(gtdata$date.1D[gtdata$Cluster==i])\n        gtdatel <- c(gtdata$date.1D.L[gtdata$Cluster==i])\n        gtdateh <- c(gtdata$date.1D.H[gtdata$Cluster==i])\n        maldateci <- sort(maldata$Date.Gens.CI[maldata$EthnicGroup==i]) \n        maldatel <- maldate - maldateci\n        maldateh <- maldate + maldateci\n        datecomps2 <- rbind(datecomps2,c(i,maldate,maldatel,maldateh,\n                                         round(gtdate),round(gtdatel),round(gtdateh)))\n    }  \n}\ncolnames(datecomps2) <- c(\"pop\",\"maldate\",\"maldatel\",\"maldateh\",\"gtdate\",\"gtdatel\",\"gtdateh\")\ndatecomps2 <- data.frame(datecomps2)\n\n\npnts <- getPopSymbols(tidyNames(datecomps2$pop,fula=F),leginfo)\npointpch <-  pnts$pch2plot\npointcol <- pnts$col2plot\npointrim <- pnts$rim2plot\n\naxmax <- max(sapply(apply(datecomps2[,2:3],1,as.character),as.numeric))\nplot(sapply(as.numeric(as.character(datecomps2$gtdate)),makeDate,add_BCE=F),\n     sapply(as.numeric(as.character(datecomps2$maldate)),makeDate,add_BCE=F),\n     xlim=sapply(c(0,240),makeDate,add_BCE=F),\n     ylim=sapply(c(240,0),makeDate,add_BCE=F),\n     ylab=\"Date inferred by MALDER\",xlab=\"Date inferred by GLOBETROTTER\",\n     type=\"n\",axes=F,main=\"\")\nabline(a=0,b=1,lwd=2,col=\"red\")\nx_labs3 <- c(2000,0,-2000,-5000,-10000)\nx_labs3char <- c(\"2000\\nCE\",0,\"2000\\nBCE\",\"5000\\nBCE\",\"10000\\nBCE\")\naxis(1,at=x_labs3,labels=x_labs3char,cex.axis=1,tick=F,padj=0.5)\naxis(2,at=x_labs3,labels=x_labs3char,cex.axis=1,tick=F,padj=0.5,las=2)\nfor(j in x_labs3) abline(v=j,lty=2)\nfor(j in x_labs3) abline(h=j,lty=2)\n\nbox()\nmtext(3,line=0,text=LETTERS[3],adj=0,las=1,cex=1.5,lwd=3,xpd=T)\nmtext(3,line=0,text=\"Number of events inferred\\nby GLOBETROTTER\",adj=0.5,las=1,cex=0.5,lwd=1,xpd=T)\n\nfor(i in 1:nrow(datecomps2))\n{\n    xs <- c(as.numeric(as.character(datecomps2[i,\"gtdatel\"])),\n            as.numeric(as.character(datecomps2[i,\"gtdateh\"])))\n    ys <- c(as.numeric(as.character(datecomps2[i,\"maldate\"])),\n            as.numeric(as.character(datecomps2[i,\"maldate\"])))\n    lines(sapply(xs,makeDate,add_BCE=F),\n          sapply(ys,makeDate,add_BCE=F))\n    xs <- c(as.numeric(as.character(datecomps2[i,\"gtdate\"])),\n            as.numeric(as.character(datecomps2[i,\"gtdate\"])))\n    ys <- c(as.numeric(as.character(datecomps2[i,\"maldatel\"])),\n            as.numeric(as.character(datecomps2[i,\"maldateh\"])))\n    lines(sapply(xs,makeDate,add_BCE=F),\n          sapply(ys,makeDate,add_BCE=F))\n}\n\n\npoints(sapply(as.numeric(as.character(datecomps2$gtdate)),makeDate,add_BCE=F),\n       sapply(as.numeric(as.character(datecomps2$maldate)),makeDate,add_BCE=F),\n       pch=as.numeric(pointpch),col=pointrim,bg=pointcol,cex=1,lwd=1)\n\n\ndev.off()\n\n\n\n\n\n",
    "created" : 1454068124452.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4086921114",
    "id" : "767E6350",
    "lastKnownWriteTime" : 1453729944,
    "path" : "~/repos/popgen/plotting_scripts/plotGlobetrotterResults.R",
    "project_path" : "plotting_scripts/plotGlobetrotterResults.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}