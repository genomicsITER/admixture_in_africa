{
    "contents" : "#########################################################################\n### SCRIPT TO PULL OUT GLOBETROTTER RESULTS FROM MULTIPLE OUTPUTS     ###\nsetwd(\"~/repos/popgen/\")\n\n############################################################\n## SOURCE SOME USEFUL FUNCTIONS FROM copyselection PACKAGE ##\n## ~~~~~~~~~~~       !!! IN DEVELOPMENT !!!     ~~~~~~~~~~ ##\n############################################################\nmain_dir <- \"~/repos/\" ## where the code is kept\nsource(paste0(main_dir,\"popgen/packages_dev/functionWriter.R\"))\nsource(paste0(main_dir,\"popgen/packages_ext/FinestructureLibrary.R\"))\nsource(paste0(main_dir,\"popgen/packages_ext/FinestructureLibrary_GB.R\"))\nlibrary(\"xtable\")\n       \n###########################################################\n## DEFINE VARIABLES AND FILES\nsetwd(paste0(main_dir,\"popgen/\"))\npopkey_file <- \"data/MalariaGenAdmixturePopulationOverviewNSAA.txt\"\npopkey <- read.table(popkey_file,header=T)\npopkey$Ethnic_Group <- toupper(popkey$Ethnic_Group)\npopkey$Ethnic_Group[popkey$Ethnic_Group==\"SEMI-BANTU\"] <- \"SEMI.BANTU\"\npopplot <- scan(\"data/MalariaGen23EthnicGroups1KGSouthAfricaFinalAnalysisPopsSSAonlyOrder.txt\",what=\"char\")\npopplot <- popplot[popplot!=\"SEMI.BANTU\"]\n\nancreg_list <- c(\"Western_Africa_Niger-Congo\",\"Central_West_Africa_Niger-Congo\",\n                 \"East_Africa_Niger-Congo\",\"East_Africa_Nilo-Saharan\",\"East_Africa_Afro-Asiatic\",\n                 \"South_Africa_Niger-Congo\",\"South_Africa_KhoeSan\",\"Eurasia\" )\n\nin_dir <- \"/mnt/kwiat/data/bayes/users/george/popgen/analysis3/globetrotter/input/\"\nres_dir <- \"/mnt/kwiat/data/bayes/users/george/popgen/analysis3/globetrotter/props/\"\ndates_dir <- \"/mnt/kwiat/well/human/george/globetrotter/dates/\"\nparam_dir <- \"/mnt/kwiat/data/bayes/users/george/popgen/analysis3/globetrotter/paramfiles/\"\nanalysis <- \"MalariaGen23EthnicGroups1KGSouthAfricaNoAmericaFinal\"\nc_suffix <- \".globetrotter.main_curves.txt\"\np_suffix <- \".globetrotter.main.txt\"\n\n##########################################################\n## LOAD INDIVIDUAL CLUSTER ASSIGNMENT:: NEEDS SERVER ACCESS\nfinal_clusts <- vector(\"list\",length(popplot))\nfor(i in 1:length(popplot))\n{\n    ii <- as.character(popplot[i])\n    names(final_clusts)[i] <- ii\n    if(ii ==\"SEMI.BANTU\") ii <- \"SEMI-BANTU\"\n    iinds <- scan(paste0(\"/mnt/kwiat/home/popgen/scripts/finalpoplists/\",ii,\"finalinds.txt\"),what=\"char\")\n    final_clusts[[i]] <- iinds\n}\npaintedinds <- read.table(\"/mnt/kwiat/data/bayes/users/george/popgen/analysis3/chromopainter/samplelists/MalariaGen23EthnicGroups1KGSouthAfricaNoAmericaFinalCP.inds\",sep=\" \")\n\n## CHANGE ACTUAL SAMPLE IDS TO CP LABELS\nfinal_clusts2<- lapply(final_clusts,function(x){as.character(paintedinds[match(unlist(x),paintedinds[,2]),1])})\n##########################################################\n## DEFINE VARIABLES TO STORE MAIN RESULTS\nresmat <- resmatnull <- resmatalt <- matrix(NA,nrow=0,ncol=22)\ndateboots <- matrix(NA,nrow=0,ncol=4)\ndate2boots <- matrix(NA,nrow=0,ncol=4)\ndatebootsnull <- matrix(NA,nrow=0,ncol=4)\n## DEFINE MATRICES TO STORE SOURCE COPYING VECTORS\nadmixturesources2 <- matrix(nrow=0,ncol=length(popplot))\ncolnames(admixturesources2) <- popplot\nadmixturesources3 <- admixturesources4 <- matrix(nrow=0,ncol=length(popplot)+20)\n\n## DEFINE ALTERNATIVE RUNS -- THIS IS WHERE I HAVE SUCCESSIVELY REMOVED DONORS\naltruns <- c(\"nolocal\",\"nolocalnomalawi\",\"nolocalnowest\",\"nolocalnosouth\",\"nolocalnoeast\")\n##########################################################\n## GET RESULTS\nfor(pop in popplot[1:48])\n{\n    print(paste(\"getting GLOBETROTTER reults for:\",pop))\n    pop <- gsub(\"-\",\".\",pop)\n    pop1 <- pop\n    ## NEED TO USE SEMI.BANTUII, WHERE I DISALLOWED BANTU FROM COPYING\n    if(pop1 == \"SEMI.BANTU\" ) pop1 <- \"SEMI.BANTUII\"\n    reg <- as.character(popkey$RegionM[popkey$Ethnic_Group==pop])\n    if(reg == \"East_Africa_Afro-Asiatic\") reg <- \"East_Africa_Nilo-Saharan\"\n    nlength <- read.table(paste0(in_dir,analysis,reg,\".chunklengths.out\"),header=T,row.names=1)\n    nlength <- rowsAsMapClusts(final_clusts2,nlength,stat=mean)\n    predmat <- nlength/rowSums(nlength)\n    donors <- gsub(\"-\",\".\",popplot)\n    a <- \"main\"\n    infile <- paste0(res_dir,pop1,\".globetrotter.\",a,\".txt\")\n    infile_null <- paste0(res_dir,pop1,\".globetrotter.null.txt\")\n    infile_dates <- paste0(dates_dir,pop1,\".globetrotter.\",a,\".dates.bt\")\n    infile_2dates <- paste0(dates_dir,pop1,\".globetrotter.\",a,\".2dates.bt\")\n    infile_dates_null <- paste0(dates_dir,pop1,\".globetrotter.null.dates.bt\")\n    infile_2dates_null <- paste0(dates_dir,pop1,\".globetrotter.null.2dates.bt\")\n    if(file.exists(infile))\n    {\n        ## GET MAIN DATA\n        ll <- getGlobetrotter(infile,donors)\n        ## GET ONE DATE BOOTSTRAPS\n        ld <- getGlobetrotterDates(infile_dates)\n        ## GET TWO DATE BOOTSTRAPS\n        ld2 <- getGlobetrotterDates(infile_2dates)\n        \n        if(nrow(ld)>0) dateboots <- rbind(dateboots,cbind(pop,\"main\",ld))\n        if(nrow(ld2)>0) date2boots <- rbind(date2boots,cbind(pop,\"main\",ld2))\n        ## ADD TO THE MAIN RESULTS TABLE\n        resmat <- rbind(resmat,c(pop,ll[[1]],\"main\"))\n        \n        ## GET THE RESULTS OF THE NULL RUN\n        if(file.exists(infile_null))\n        {\n            lln <- getGlobetrotter(infile=infile_null,donors)\n            resmat <- rbind(resmat,c(pop,lln[[1]],\"main.null\"))\n            ld <- getGlobetrotterDates(infile_dates_null)\n            if(nrow(ld)>0)\n            {\n                ld <- cbind(pop,\"main.null\",ld)\n                colnames(ld) <- colnames(dateboots)\n                dateboots <- rbind(dateboots,ld)\n            }\n            ld2 <- getGlobetrotterDates(infile_2dates_null)\n            if(nrow(ld2)>0)\n            {\n                ld2 <- cbind(pop,\"main.null\",ld2)\n                colnames(ld2) <- colnames(date2boots)\n                date2boots <- rbind(date2boots,ld2)\n            }\n            \n        }\n        ## PULL OUT THE SOURCES AND GENERATE COPYING VECTORS USING PREDMAT\n        if(!is.null(ll[[2]]))\n        {\n            finn <- ll[[2]]\n            ## REORDER finn TO MATCH PREDMAT; THERE ARE 8 SOURCES THAT TWO FOR EACH TYPE OF EVENT\n            cvs <- finn[,2:ncol(finn)]\n            rownames(cvs) <- paste(paste(pop,a,sep=\".\"),1:8,sep=\".\")\n            ## ADD TO THE MAIN MATRIX\n            while(ncol(cvs)!=length(popplot)) cvs <- cbind(cvs,0)\n            colns <- gsub(\"-\",\".\",popplot)\n            colnames(cvs)[colnames(cvs) == \"\"] <- colns[!colns%in%colnames(cvs)]\n            admixturesources2 <- rbind(admixturesources2,cvs[,colns])\n            lln_tmp <- c()\n            for(k in 1:nrow(cvs))\n            {\n                lln_tmp <- rbind(lln_tmp,ll[[1]])  \n            }\n            admixturesources3 <- rbind(admixturesources3,cbind(lln_tmp,cvs[,colns]))\n        }\n        ## ADD NULL SOURCES\n        if(!is.null(lln[[2]]))\n        {\n            finn <- lln[[2]]\n            ## REORDER finn TO MATCH PREDMAT; THERE ARE 8 SOURCES THAT TWO FOR EACH TYPE OF EVENT\n            cvs <- finn[,2:ncol(finn)]\n            rownames(cvs) <- paste(paste(pop,\"null\",sep=\".\"),1:8,sep=\".\")\n            ## ADD TO THE MAIN MATRIX\n            while(ncol(cvs)!=length(popplot)) cvs <- cbind(cvs,0)\n            colns <- gsub(\"-\",\".\",popplot)\n            colnames(cvs)[colnames(cvs) == \"\"] <- colns[!colns%in%colnames(cvs)]\n            admixturesources2 <- rbind(admixturesources2,cvs[,colns])\n            lln_tmp <- c()\n            for(k in 1:nrow(cvs))\n            {\n                lln_tmp <- rbind(lln_tmp,lln[[1]])  \n            }\n            admixturesources3 <- rbind(admixturesources3,cbind(lln_tmp,cvs[,colns]))\n        }\n        \n        \n        ## GET RESULTS FOR ALTERNATIVE RUNS\n        for(j in altruns)\n        {\n            if(j==\"nolocalnoeast\" & pop == \"MALAWI\")\n            {\n                infile2 <- paste0(paste0(res_dir,pop1,j,\".globetrotter.null.txt\"))\n            } else\n            {\n                infile2 <- paste0(paste0(res_dir,pop1,j,\".globetrotter.main.txt\"))\n            }\n            infile_dates2 <- paste0(dates_dir,pop1,j,\".globetrotter.dates.bt\")\n            if(file.exists(infile2))\n            {\n                lln <- getGlobetrotter(infile2,donors)\n                resmatalt <- rbind(resmatalt,c(pop,lln[[1]],j))\n                if(!is.null(lln[[2]]))\n                {\n                    finn <- lln[[2]]\n                    ## reorder finn to have same cols as predmat\n                    cvs <- finn[,2:ncol(finn)]\n                    rownames(cvs) <- paste(paste(pop,j,sep=\".\"),1:8,sep=\".\")\n                    ## add to admixture sources results matrix\n                    colns <- gsub(\"-\",\".\",popplot)\n                    while(ncol(cvs)!=length(colns)) cvs <- cbind(cvs,0)\n                    colnames(cvs)[colnames(cvs) == \"\"] <- colns[!colns%in%colnames(cvs)]\n                    lln_tmp <- c()\n                    for(k in 1:nrow(cvs))\n                    {\n                        lln_tmp <- rbind(lln_tmp,lln[[1]])  \n                    }\n                    admixturesources4 <- rbind(admixturesources4,cbind(lln_tmp,cvs[,colns]))\n                    \n                }\n            }\n        }\n    }\n}\n\nresmat <- data.frame(resmat,stringsAsFactors = FALSE)\nresmat$result <- toupper(resmat$result)\n\n#############################################################\n## NOW WE HAVE OUR RESULTS TABLE AND WE CAN WORK WITH IT TO \n## GENERATE OUR FINAL RESULTS\n#############################################################\n## GEN ADMIXTURE P-VALUE BASED ON NULL BOOTSTRAPS\nresmat$pval <- 1\nresmat$nump <- 0\nnullruns <- grep(\"null\",paste(dateboots$pop,dateboots[,2]))\nnullruns <- dateboots[nullruns,]\nfor(i in as.character(unique(nullruns$pop)))\n{\n    bb <- nullruns$date1.est.boot[nullruns$pop==i]\n    rowindex <- paste(resmat$V1,resmat$V22,sep=\".\") == paste(i,\"main\",sep=\".\")\n    resmat$pval[rowindex] <- sum(bb>400 | bb < 1) / length(bb)\n    resmat$nump[rowindex] <- length(bb)\n    rowindex <- paste(resmat$V1,resmat$V22,sep=\".\") == paste(i,\"main.null\",sep=\".\")\n    resmat$pval[rowindex] <- sum(bb>400 | bb < 1) / length(bb)\n}\n\n#############################################################\n## GENERATE A FINAL TABLE OF RESULTS\nrestypes <- c(\"ONE-DATE\",\"ONE-DATE-MULTIWAY\",\"MULTIPLE-DATES\",\"UNCERTAIN\" ,\"NO-ADMIXTURE\" ,\"UNKNOWN\")\nnumericcols <- c(\"maxR2fit.1date\",\"fit.quality.1event\",\"fit.quality.2events\",\n                 \"maxScore.2events\",\"proportion.date1.source1\",\"proportion.date2.source1\")\nfinaltable <- matrix(NA,nrow=0,ncol=ncol(resmat))\nfor(i in restypes)\n{\n    ii <- resmat[resmat$result==i,]\n    if(nrow(ii) > 0)\n    {\n        ii[,numericcols] <- apply(signif(apply(ii[,numericcols],2,as.numeric),3),2,as.character)\n        ii <- convert.factors.to.strings.in.dataframe(ii)\n        ii <- ii[order(ii$bestmatch.event1.source1,ii$gen.1date,decreasing=T),]\n    }\n    finaltable <- rbind(finaltable,ii)\n}\n\nfinaltable <- cbind(finaltable[,c(1,22)],finaltable[,c(2:21,23:(ncol(finaltable)))])\ncolnames(finaltable) <- c(\"Cluster\",\"Analysis\",\"Result\",\"Date\",\"alpha\",\n                          \"max(R1)\",\"FQ1\",\"FQ2\",\"best.source1\",\"best.source2\",\n                          \"alpha2\",\"best.source1.ev2\",\"best.source2.ev2\",\n                          \"Date.2a\",\"Date2b\",\"maxScore2ev\",\"alpha2.date1\",\n                          \"best.source1.date1\",\"best.source2.date1\",\n                          \"alpha2.date2\",\"best.source1.date2\",\"best.source2.date2\",\"pval\",\"nump\")\n#############################################################\n## LOOK AT DATE BOOTSTRAPS AND GENERATE CONFIDENCE INTERVALS\ndateboots2 <- dateboots3 <- c()\nfor(i in unique(dateboots$pop))\n{\n    for(analy in c(\"main\",\"main.null\"))\n    {\n        ds <- round(dateboots$date1.est.boot[dateboots$pop==i & dateboots[,2] == analy])\n        ii <- sapply(quantile(ds,c(0.975,0.025)),makeDate)\n        dateboots2 <- rbind(dateboots2,c(i,analy,ii))\n        ii <- round(quantile(ds,c(0.025,0.975)))\n        dateboots3 <- rbind(dateboots3,c(i,analy,ii))\n    }\n}\n#############################################################\n## LOOK AT TWO DATE BOOTSTRAPS AND GENERATE CONFIDENCE INTERVALS\ndate2boots2 <- date2boots3 <- c()\nfor(i in unique(date2boots$pop))\n{\n    for(analy in c(\"main\",\"main.null\"))\n    {\n        ds <- round(date2boots$date1.est.boot[date2boots$pop==i & date2boots[,2] == analy])\n        ds1 <- round(date2boots$date1.est.boot[date2boots$pop==i& date2boots[,2] == analy])\n        ds2 <- round(date2boots$date2.est.boot[date2boots$pop==i& date2boots[,2] == analy])\n        ii <- sapply(quantile(ds1,c(0.975,0.025)),makeDate)\n        iii <- sapply(quantile(ds2,c(0.975,0.025)),makeDate)\n        date2boots2 <- rbind(date2boots2,c(i,analy,ii,iii))\n        ii <- round(quantile(ds1,c(0.025,0.975)))\n        iii <- round(quantile(ds2,c(0.025,0.975)))\n        date2boots3 <- rbind(date2boots3,c(i,analy,ii,iii))\n    }\n}\n\nfinaltable <- convert.factors.to.strings.in.dataframe(finaltable)\nfinaltable$Date.CI <- finaltable$dateL <- finaltable$dateH <- NA\n\n#############################################################\n## FILL IN DATES AND CIS IN THE MAIN RESULTS TABLE\n\nrowindex <- match(paste(dateboots2[,1],dateboots2[,2],sep=\".\"),\n                      paste(finaltable$Cluster,finaltable$Analysis,sep=\".\"),nomatch=0)\nfinaltable$Date.CI[rowindex] <- paste0(\"(\",dateboots2[,3],\"-\",dateboots2[,4],\")\")\nfinaltable$dateL[rowindex] <- dateboots3[,3]\nfinaltable$dateH[rowindex] <- dateboots3[,4]\n    \nfinaltable$Date2a.CI <- finaltable$date2aL <- finaltable$date2aH <- finaltable$Date2b.CI <- finaltable$date2bL <- finaltable$date2bH <- NA\nrowindex <- match(paste(date2boots2[,1],date2boots2[,2],sep=\".\"),\n                      paste(finaltable$Cluster,finaltable$Analysis,sep=\".\"),nomatch=0)\n    \nfinaltable$Date2a.CI[rowindex] <- paste0(\"(\",date2boots2[,3],\"-\",date2boots2[,4],\")\")\nfinaltable$date2aL[rowindex] <- date2boots3[,3]\nfinaltable$date2aH[rowindex] <- date2boots3[,4]\nfinaltable$Date2b.CI[rowindex] <- paste0(\"(\",date2boots2[,5],\"-\",date2boots2[,6],\")\")\nfinaltable$date2bL[rowindex] <- date2boots3[,5]\nfinaltable$date2bH[rowindex] <- date2boots3[,6]\n#############################################################\n## ALSO ROUND DATE COLUMN\nfinaltable$Date <- round(as.numeric(finaltable$Date))\nfinaltable$Date.2a <- round(as.numeric(finaltable$Date.2a))\nfinaltable$Date2b <- round(as.numeric(finaltable$Date2b))\n#############################################################\n### MAKE SOME PRETTY RESULTS TABLES AND STORE FOR PLOTTING\nallcols <- c(\"Cluster\",\"Analysis\",\"pval\",\"maxScore2ev\",\"max.R1.\",\"FQ1\",\"FQ2\",\"Result\")\nonedatecols <- c(allcols,\"Date\",\"dateL\",\"dateH\",\"alpha\",\"best.source1\",\"best.source2\")\nonemultcols <- c(onedatecols,\"alpha2\",\"best.source1.ev2\",\"best.source2.ev2\") \ntwodatecols <- c(allcols,\"Date.2a\",\"date2aH\",\"date2aL\",\"best.source1.date1\",\"best.source2.date1\",\"alpha2.date1\",\"Date2b\",\"date2bH\",\"date2bL\",\"best.source1.date2\",\"best.source2.date2\",\"alpha2.date2\")\n\n#############################################################\n#############################################################\n#############################################################\n## NOW ALSO DEFINE NO-ADMIXTURE WHEN THE REDUCTION IN THE NULL\n## INFERENCE R^2 IS GREATER THAN 1/3\nres.tabA <- convert.factors.to.strings.in.dataframe(finaltable) #[,twodatecols]\n## DEFINE NO ADMIXTURE FROM P-VALUES\nres.tabA$Result[res.tabA$pval>0.05] <- \"NO-ADMIXTURE\"\nnullruns <- grep(\"null\",res.tabA$Analysis)\nmainruns <- grep(\"null\",res.tabA$Analysis,invert=T)\nmall <- rep(NA,nrow(res.tabA))\nfor(i in mainruns)\n{\n    pop <- res.tabA$Cluster[i]\n    analy <- res.tabA$Analysis[i]\n    res <- res.tabA$Result[i]\n    r1 <- as.numeric(res.tabA[,\"max(R1)\"][res.tabA$Cluster==pop&res.tabA$Analysis==analy])\n    r1n <- as.numeric(res.tabA[,\"max(R1)\"][res.tabA$Cluster==pop&res.tabA$Analysis==paste(analy,\"null\",sep=\".\")])\n    if(length(r1n)>0 & res !=\"UNKNOWN\")\n    {\n        m <- r1n/r1 # tests again whether multiple dates is correct inference\n        mall[i] <- unique(m) #if(m<(2/3)) \n    }\n}\n## NOW WE SWITCH TO UNCERTAIN ANY EVENT WHERE MAX(R1) < 0.175 OR \n## NULL R^2 IS REDUCED BY MORE THAN 2/3\nres.tabA$Result[which(as.numeric(res.tabA[,\"max(R1)\"])<0.175 | mall<(1/3))] <- \"UNCERTAIN\"\n#############################################################\n#############################################################\n## ORDER RESULTS BY EVENT TYPE AND DATE\nres.tabAll <- res.tabA\nrt1 <- res.tabA[!res.tabA$Result%in%c(\"UNCERTAIN\",\"NO-ADMIXTURE\"),]\nrt2 <- res.tabA[res.tabA$Result%in%c(\"UNCERTAIN\",\"NO-ADMIXTURE\"),]\nres.ord <- rt1$best.source1.date1\nrt1 <- rt1[order(res.ord,as.numeric(rt1$Date.2a)),]\nres.ord <- c(res.ord,rep(\"XXX\",nrow(rt2)))\nres.tabA <- rbind(rt1,rt2)\nres.res <- res.tabA$Result\nres.res <- gsub(\"ONE-DATE-MULTIWAY\",\"1MW\",res.res)\nres.res <- gsub(\"ONE-DATE\",\"1D\",res.res)\nres.res <- gsub(\"MULTIPLE-DATES\",\"2D\",res.res)\nres.res <- gsub(\"UNCERTAIN\",\"U\",res.res)\nres.res <- gsub(\"NO-ADMIXTURE\",\"NA\",res.res)\nres.res <- gsub(\"UNKNOWN\",\"NA\",res.res)\nres.tabA$Result <- res.res\nres.tabA[,\"maxScore2ev\"] <- round(as.numeric(as.character(res.tabA[,\"maxScore2ev\"])),2)\nres.tabA[,\"pval\"] <- round(as.numeric(as.character(res.tabA[,\"pval\"])),2)\n\n\n#############################################################\n## SWITCH RESULT IF MULTIPLE DATE ARE UNREASONABLE ie CI IS LESS THAN 2\nres.tabA$FinalResult <- res.tabA$Result\nres.tabA$FinalAnaly <- \"main\"\nmin_gens <- 0\n## for multiple dates, if either the point estimate or CI include 3\n## don't bother with nulls\n## then switch result\n\n## IF TWO DATES:\n## CHECK IF FIRST EVENT HAS SMALL CI --\n##   IF THIS <= 5, THEN USE SECOND EVENT ONLY?\n## IF NULL NULL AND MAIN RUN GIVE DIFFERENT RESULTS:\n## FOR KHOESAN : USE NULL RUN AN FORCE SINGLE DATE\n##      JUSTIFICATION IS THAT THE 2D HS CI INCLUDING 1\npops <- popkey$Ethnic_Group[popkey$RegionM==\"South_Africa_KhoeSan\"]\ntest1mw <- res.tabA$Cluster%in%pops & res.tabA$Result == \"2D\" & res.tabA$FQ1 <= 0.975\nres.tabA$FinalResult[test1mw] <- \"1MW\"\ntest1mw <- res.tabA$Cluster%in%pops & res.tabA$Result == \"2D\" & res.tabA$FQ1 > 0.975\nres.tabA$FinalResult[test1mw] <- \"1D\"\nres.tabA$FinalAnaly[res.tabA$Cluster%in%pops] <- \"main.null\"\n\n## FOR SOUTH NC: USE NULL RUN AND FORCE SINGLE DAT\n##       SEBANTU AND AMAXHOSA -- REMOVE OLD DATE\npops <- popkey$Ethnic_Group[popkey$RegionM==\"South_Africa_Niger-Congo\"]\ntest1mw <- res.tabA$Cluster%in%pops & res.tabA$Result == \"2D\" & res.tabA$FQ1 <= 0.975\nres.tabA$FinalResult[test1mw] <- \"1MW\"\ntest1mw <- res.tabA$Cluster%in%pops & res.tabA$Result == \"2D\" & res.tabA$FQ1 > 0.975\nres.tabA$FinalResult[test1mw] <- \"1D\"\nres.tabA$FinalResult[res.tabA$Cluster==\"SWBANTU\"] <- \"2D\"\nres.tabA$FinalAnaly[res.tabA$Cluster%in%pops] <- \"main.null\"\n\n## FROR AFROASIATIC SPEAKERS, USE NULL\npops <- popkey$Ethnic_Group[popkey$RegionM==\"East_Africa_Afro-Asiatic\"]\nres.tabA$FinalAnaly[res.tabA$Cluster%in%pops] <- \"main.null\"\n\n## FOR GAMBIA/MALI : FORCE TWO DATE, BUT ONLY REPORT SECOND DATE\npops <- popkey$Ethnic_Group[popkey$RegionM==\"Western_Africa_Niger-Congo\"]\nres.tabA$FinalResult[res.tabA$Cluster%in%pops] <- \"1D\"\n\n## SWAP SECOND DATE COLUMNS FOR FIRST DATE\ntemp <- res.tabA[res.tabA$Cluster%in%pops,]\ndate1cols <- c(\"Date\",\"alpha\",\"best.source1\",\"best.source2\",\"dateH\",\"dateL\",\"Date.CI\")\ndate2cols <- c(\"Date2b\",\"alpha2.date2\",\"best.source1.date2\",\"best.source2.date2\",\"date2bH\",\"date2bL\",\"Date2b.CI\")\nres.tabA[res.tabA$Cluster%in%pops,date1cols] <- temp[,date2cols]\nres.tabA[res.tabA$Cluster%in%pops,date2cols] <- temp[,date1cols]\n\n###################################################\n# matching <- c()\n# for(i in unique(res.tabA$Cluster))\n# {\n#     if(length(unique(res.tabA$Result[res.tabA$Cluster==i])) != 1) matching <- c(matching,i)\n# }\n# \n# res.tabA[res.tabA$Cluste%in%matching,1:10]\n###################################################\n## THINK ABOUT COMPARING TWO DATE INF TO ONE DATE\n## WHAT ARE THE TWO DATES?\n## HOW DOES THE SECOND DATE RELATE TO FIRST\n## WHAT ARE THE SOURCES? ARE THEY THE SAME FOR BOTH EVENTS?\n\ntest <- res.tabA$Result==\"2D\"\ntmp.res <- res.tabA[test==T,]\ntmp.res <- tmp.res[grep(\"null\",tmp.res$Analysis,invert=T),]\ntest <- (as.numeric(tmp.res$date2aL)>min_gens)\ntest[is.na(test)] <- F\ntmp.res <- tmp.res[test==F,]\nif(nrow(tmp.res)>0)\n{\n    tmp.res$FinalResult <- \"1D\"\n    tmp.res$FinalResult[tmp.res$FQ1 <= 0.975] <- \"1MW\"\n    res.tabA[rownames(res.tabA)%in%rownames(tmp.res),] <- tmp.res\n}\n\n## then generate a final table will all results\n## plus the final results table \ncolnames(res.tabA)[colnames(res.tabA)==\"Date\"] <- \"date.1D\"\ncolnames(res.tabA)[colnames(res.tabA)==\"dateL\"] <- \"date.1D.L\"\ncolnames(res.tabA)[colnames(res.tabA)==\"dateH\"] <- \"date.1D.H\"\ncolnames(res.tabA)[colnames(res.tabA)==\"Date.2a\"] <- \"date.2D.1\"\ncolnames(res.tabA)[colnames(res.tabA)==\"date2aH\"] <- \"date.2D.1.H\"\ncolnames(res.tabA)[colnames(res.tabA)==\"date2aL\"] <- \"date.2D.1.L\"\ncolnames(res.tabA)[colnames(res.tabA)==\"Date2b\"] <- \"date.2D.2\"\ncolnames(res.tabA)[colnames(res.tabA)==\"date2bH\"]  <- \"date.2D.2.H\"\ncolnames(res.tabA)[colnames(res.tabA)==\"date2bL\"] <- \"date.2D.2.L\"\n\nres.tabA <- res.tabA[order(res.tabA$FinalResult,res.tabA$best.source1),]\nwrite.csv(res.tabA,file=paste0(main_dir,\"popgen/figures/AfricaGlobetrotterFinalResults.csv\"),quote=F,row.names=F)\n\n#############################################################\n## NOW WORK ON GETTING MAKING NICE TEX TABLES\nres.tabB <- res.tabA\nres.tabB$Result <- res.tabB$FinalResult\nrt1 <- res.tabB[!res.tabB$FinalResult%in%c(\"U\",\"NA\"),]\nrt2 <- res.tabB[res.tabB$FinalResult%in%c(\"U\",\"NA\"),]\nres1.ord <- rt1[,\"best.source1\"]\nres1.ord[rt1$Result==\"2D\"] <- rt1$best.source1.date1[rt1$Result==\"2D\"]\nres.ord.levs <- popplot\nres1.ord <- factor(res1.ord,levels=res.ord.levs)\nres2.ord <- rt1[,\"best.source2\"]\nres2.ord[rt1$Result==\"2D\"] <- rt1$best.source2.date1[rt1$Result==\"2D\"]\nres2.ord <- factor(res2.ord,levels=res.ord.levs)\n\nrt1 <- rt1[order(res2.ord,res1.ord,as.numeric(rt1[,\"date.1D\"])),]\n#res.ord <- c(res.ord,rep(\"XXX\",nrow(rt2)))\nres.tabB <- rbind(rt1,rt2)\n## PULL OUT THE FINAL RESULTS\n#rows2keep <- grep(\"main.null\",res.tabB[,2],invert=F) ## OLD VERSION\nres2keep <- res.tabB[,c(\"Cluster\",\"FinalAnaly\")]\nres2keep <- res2keep[duplicated(res2keep),]\nrows2keep <- c()\nfor(i in 1:nrow(res2keep))\n{\n    keeper <- (1:nrow(res.tabB))[res.tabB$Cluster==res2keep[i,1] & res.tabB$Analysis==res2keep[i,2]]\n    rows2keep <- c(rows2keep,keeper)\n}\n\nres.tabB <- res.tabB[rows2keep,]\n\n#############################################################\n## THE FINAL MAIN RESULTS TABLE\nwrite.csv(res.tabB,file=paste0(main_dir,\"popgen/figures/AfricaGTBESTtable.csv\"),quote=F)\n#############################################################\nres.tabcols <- c(\"Cluster\",\"Analysis\",\"pval\",\"Result\",\"FinalResult\",\"max.R1.\",\"FQ1\",\"FQ2\",\"maxScore2ev\" ,\n                 \"date.1D\",\"Date.CI\", \"alpha\",\"best.source1\",\"best.source2\",\n                 \"alpha2\",\"best.source1.ev2\",\"best.source2.ev2\",\n                 \"date.2D.1\",\"Date2a.CI\",\"alpha2.date1\",\"best.source1.date1\",\"best.source2.date1\",\n                 \"date.2D.2\",\"Date2b.CI\",\"alpha2.date2\",\"best.source1.date2\",\"best.source2.date2\")\ncolnames(res.tabB)[colnames(res.tabB)==\"max(R1)\"] <- \"max.R1.\"\nres.tabB <- res.tabB[,res.tabcols]\n\ntest <- res.tabB$Result!=res.tabB$FinalResult\n#res.tabB$Result[test] <- paste(res.tabB$FinalResult[test],\"(\",res.tabB$Result[test],\")\",sep=\"\")\nres.tabB$Result[test] <- res.tabB$FinalResult[test]\nres.tabB <- res.tabB[,colnames(res.tabB)!=\"FinalResult\"]\n\nfor(i in c(\"date.1D\",\"date.2D.1\",\"date.2D.2\"))\n{\n    res.tabB[,i] <- sapply(res.tabB[,i],function(x)makeDate(round(as.numeric(x)),add_BCE=F))\n    res.tabB[,i][which(res.tabB[,i]<0)] <- paste0(-res.tabB[,i][which(res.tabB[,i]<0)],\"B\")\n    res.tabB[,i] <- as.character(res.tabB[,i])\n}\n\n#############################################################\n## SOME FURTHER COSMETIC CHANGES:: change p = 0 to p<0.01\nres.tabB$pval[res.tabB$pval==0] <- \"<0.01\"\n## only include best guess info\nonedatecols <- c(\"date.1D\",\"Date.CI\",\"alpha\",\"best.source1\",\"best.source2\" )\nonemwcols <- c( \"alpha2\",\"best.source1.ev2\",\"best.source2.ev2\")\ntwodatecols <- c(\"date.2D.1\",\"Date2a.CI\",\"alpha2.date1\",\"best.source1.date1\",\"best.source2.date1\",\n                 \"date.2D.2\",\"Date2b.CI\",\"alpha2.date2\",\"best.source1.date2\",\"best.source2.date2\")\n\nres.tabB[res.tabB$Result%in%c(\"1D\",\"1D(2D)\"),c(onemwcols,twodatecols)] <- NA\nres.tabB[res.tabB$Result%in%c(\"1MW\",\"1MW(2D)\"),twodatecols] <- NA\nres.tabB[res.tabB$Result==\"2D\",c(onedatecols,onemwcols)] <- NA\n\nfinal.res2plot <- res.tabB\n## DO I NEED TO OUTPUT THIS SOMEWHERE?\nwrite.table(final.res2plot,file=paste0(main_dir,\"popgen/data/MalariaGenGlobetrotter2plotFinal.txt\"))\nwrite.table(admixturesources2,paste0(main_dir,\"popgen/data/MalariaGenGlobetrotterAdmixtureSources2.txt\"))\nwrite.table(admixturesources3,paste0(main_dir,\"popgen/data/MalariaGenGlobetrotterAdmixtureSources3.txt\"))\nwrite.table(admixturesources4,paste0(main_dir,\"popgen/data/MalariaGenGlobetrotterAdmixtureSources4.txt\"))\nwrite.table(dateboots,paste0(main_dir,\"popgen/data/MalariaGenGlobetrotterOneDateBootstraps.txt\"))\nwrite.table(date2boots,paste0(main_dir,\"popgen/data/MalariaGenGlobetrotterTwoDateBootstraps.txt\"))\n\n## combine the date CI colummns\nres.tabB <- final.res2plot\nres.tabB$date.1D <- gsub(\"NAnewlineNA\",NA,paste(res.tabB$date.1D,res.tabB$Date.CI,sep=\"newline\"))\nres.tabB$date.2D.1 <- gsub(\"NAnewlineNA\",NA,paste(res.tabB$date.2D.1,res.tabB$Date2a.CI,sep=\"newline\"))\nres.tabB$date.2D.2 <- gsub(\"NAnewlineNA\",NA,paste(res.tabB$date.2D.2,res.tabB$Date2b.CI,sep=\"newline\"))\nres.tabB <- res.tabB[,!colnames(res.tabB)%in%c(\"Date.CI\",\"Date2a.CI\",\"Date2b.CI\")]\n\n## put in proper names\nnamecols <- c(\"Cluster\",grep(\"source\",colnames(res.tabB),value=T))\nfor(i in namecols)\n{\n    tmp <- tidyNames(res.tabB[,i], fula=T, khoesan=T)\n    res.tabB[,i] <- tmp\n}\n#############################################################\nres.tabB <- xtable(res.tabB,align=\"|r|r|cccccccccccccccccccccc|\")\nnewlines <- c()\nnewlineord <- as.character(res.tabB$best.source1)\nnewlineord[is.na(newlineord)] <- res.tabB$best.source1.ev2[is.na(newlineord)]\nnewlineord[is.na(newlineord)] <- res.tabB$best.source1.date1[is.na(newlineord)]\nfor(i in (2:length(newlineord))) if(newlineord[i]!=newlineord[(i-1)]) newlines <- c(newlines,i)\n\naddtorow          <- list()\naddtorow$pos      <- list()\naddtorow$pos[[1]] <- c(-1)\naddtorow$pos[[2]] <- c(newlines-1)\n\naddtorow$command[[1]]  <- \"main results table\"\naddtorow$command[[2]] <- \"\\\\hline \\n\"\nprint(res.tabB, floating=FALSE,\n      tabular.environment=\"longtable\", \n      comment=FALSE,\n      include.colnames=FALSE,\n      include.rownames=FALSE,\n      caption.placement=\"top\",file=paste0(main_dir,\"popgen/figures/AfricaGTBESTtable.tex\"),\n      booktabs=TRUE,add.to.row=addtorow)#,\n\n#system(paste0(\"sed -i 's|newline|\\newline|g' \",main_dir,\"popgen/figures/AfricaGTBESTtable.tex\"))\n\n#############################################################\n## FINALLY RECORD ALL RESULTS\nres.tabA <- res.tabA[order(res.tabA$Cluster,res.tabA$Analysis,res.tabA$best.source1),]\nrescls <- res.tabA$Cluster\ncolnames(res.tabA)[colnames(res.tabA)==\"max(R1)\"] <- \"max.R1.\"\nres.tabA <- res.tabA[,res.tabcols]\n\ntest <- res.tabA$Result!=res.tabA$FinalResult\nres.tabA$Result[test] <- paste(res.tabA$FinalResult[test],\"(\",res.tabA$Result[test],\")\",sep=\"\")\nres.tabA <- res.tabA[,colnames(res.tabA)!=\"FinalResult\"]\n\nfor(i in c(\"date.1D\",\"date.2D.1\",\"date.2D.2\"))\n{\n    res.tabA[,i] <- sapply(res.tabA[,i],function(x)makeDate(round(as.numeric(x)),add_BCE=F))\n    res.tabA[,i][which(res.tabA[,i]<0)] <- paste0(-res.tabA[,i][which(res.tabA[,i]<0)],\"B\")\n    res.tabA[,i] <- as.character(res.tabA[,i])\n}\nres.tabA$pval[res.tabA$pval==0] <- \"<0.01\"\n\ntmp <- res.tabA\n## combine the date CI colummns\nres.tabA$date.1D <- gsub(\"NAnewlineNA\",NA,paste(res.tabA$date.1D,res.tabA$Date.CI,sep=\"newline\"))\nres.tabA$date.2D.1 <- gsub(\"NAnewlineNA\",NA,paste(res.tabA$date.2D.1,res.tabA$Date2a.CI,sep=\"newline\"))\nres.tabA$date.2D.2 <- gsub(\"NAnewlineNA\",NA,paste(res.tabA$date.2D.2,res.tabA$Date2b.CI,sep=\"newline\"))\nres.tabA <- res.tabA[,!colnames(res.tabA)%in%c(\"Date.CI\",\"Date2a.CI\",\"Date2b.CI\")]\n\n## put in proper names\nnamecols <- c(\"Cluster\",grep(\"source\",colnames(res.tabA),value=T))\nfor(i in namecols)\n{\n    tmp <- tidyNames(res.tabA[,i], fula=T, khoesan=T)\n    res.tabA[,i] <- tmp\n}\n\n\nres.tabA <- xtable(res.tabA,align=\"|r|r|cccccccccccccccccccccc|\")\n\n### print all events\nnewlines <- c()\nfor(i in (2:length(rescls))) if(rescls[i]!=rescls[(i-1)]) newlines <- c(newlines,i)\n#newlines <- sort(c(newlines,newlines - 1))\n#newlines <- newlines[newlines != 0]\n\naddtorow          <- list()\naddtorow$pos      <- list()\naddtorow$pos[[1]] <- c(-1)\naddtorow$pos[[2]] <- c(newlines-1)\n\naddtorow$command[[1]]  <- \"all results\"\naddtorow$command[[2]] <- \"\\\\hline \\n\"\nprint(res.tabA, floating=FALSE,\n      tabular.environment=\"longtable\", \n      comment=FALSE,\n      include.colnames=FALSE,\n      include.rownames=FALSE,\n      caption.placement=\"top\",file=paste0(main_dir,\"popgen/figures/AfricaGTALLtable.tex\"),\n      booktabs=TRUE,add.to.row=addtorow)#,\n\n\n\n\n",
    "created" : 1455182488698.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3871648006",
    "id" : "8CB9BADC",
    "lastKnownWriteTime" : 1455277680,
    "path" : "~/repos/popgen/plotting_scripts/getGlobetrotterResults.R",
    "project_path" : "plotting_scripts/getGlobetrotterResults.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}